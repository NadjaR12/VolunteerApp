[{"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/index.js":"1","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/App.js":"2","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/reportWebVitals.js":"3","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/context/auth.js":"4","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/ProjectDetails.js":"5","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Projects.js":"6","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Volunteer.js":"7","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Home.js":"8","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Events.js":"9","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/EventDetails.js":"10","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/ProjectVolunteerList.js":"11","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/AdminDashboard.js":"12","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/EditProject.js":"13","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/VolunteersFullList.js":"14","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/EditEvent.js":"15","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/IsPrivate.js":"16","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesLog/Login.js":"17","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesLog/Signup.js":"18","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/NavbarVisitor.js":"19","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/NavbarHome.js":"20","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ProjectListVisitor.js":"21","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/Menu.js":"22","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/SearchBarEvent.js":"23","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ToggleEvent.js":"24","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/DateFilterEvent.js":"25","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/TypeFilterEvent.js":"26","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/VolunteerForm.js":"27","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/VolunteerToggle.js":"28","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/NavbarAdmin.js":"29","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/VolunteersProjectSearchBar.js":"30","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ProjectList.js":"31","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/VolunteersSearchBar.js":"32","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/EventList.js":"33","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/api/service.js":"34","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/PopUpEditProject.js":"35","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/PopupCreateEvent.js":"36","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/PopUpCreateProject.js":"37","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/PopUpEditEvent.js":"38","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/CreateProject.js":"39","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/CreateEvent.js":"40","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/api/serviceEvent.js":"41"},{"size":701,"mtime":1648749711454,"results":"42","hashOfConfig":"43"},{"size":2482,"mtime":1648718368902,"results":"44","hashOfConfig":"43"},{"size":361,"mtime":1648749725666,"results":"45","hashOfConfig":"43"},{"size":1716,"mtime":1648717539634,"results":"46","hashOfConfig":"43"},{"size":2183,"mtime":1648802373377,"results":"47","hashOfConfig":"43"},{"size":512,"mtime":1648491257802,"results":"48","hashOfConfig":"43"},{"size":320,"mtime":1648491269713,"results":"49","hashOfConfig":"43"},{"size":3194,"mtime":1648978901928,"results":"50","hashOfConfig":"43"},{"size":3572,"mtime":1648807641704,"results":"51","hashOfConfig":"43"},{"size":1094,"mtime":1648803073954,"results":"52","hashOfConfig":"43"},{"size":3022,"mtime":1646852379409,"results":"53","hashOfConfig":"43"},{"size":892,"mtime":1648805188458,"results":"54","hashOfConfig":"43"},{"size":4103,"mtime":1646817972772,"results":"55","hashOfConfig":"43"},{"size":2997,"mtime":1646852379409,"results":"56","hashOfConfig":"43"},{"size":4513,"mtime":1646899619877,"results":"57","hashOfConfig":"43"},{"size":449,"mtime":1648488352635,"results":"58","hashOfConfig":"43"},{"size":2263,"mtime":1648058073724,"results":"59","hashOfConfig":"43"},{"size":2722,"mtime":1648058117356,"results":"60","hashOfConfig":"43"},{"size":495,"mtime":1648488905408,"results":"61","hashOfConfig":"43"},{"size":473,"mtime":1648488808744,"results":"62","hashOfConfig":"43"},{"size":1579,"mtime":1648752415748,"results":"63","hashOfConfig":"43"},{"size":1337,"mtime":1648488587096,"results":"64","hashOfConfig":"43"},{"size":339,"mtime":1648489832515,"results":"65","hashOfConfig":"43"},{"size":392,"mtime":1648489828991,"results":"66","hashOfConfig":"43"},{"size":275,"mtime":1648487692588,"results":"67","hashOfConfig":"43"},{"size":933,"mtime":1648489824979,"results":"68","hashOfConfig":"43"},{"size":5487,"mtime":1648490115122,"results":"69","hashOfConfig":"43"},{"size":386,"mtime":1648207294593,"results":"70","hashOfConfig":"43"},{"size":1004,"mtime":1648489674369,"results":"71","hashOfConfig":"43"},{"size":418,"mtime":1646768289403,"results":"72","hashOfConfig":"43"},{"size":3398,"mtime":1648722127805,"results":"73","hashOfConfig":"43"},{"size":416,"mtime":1648490151919,"results":"74","hashOfConfig":"43"},{"size":2425,"mtime":1648804944160,"results":"75","hashOfConfig":"43"},{"size":442,"mtime":1646908928192,"results":"76","hashOfConfig":"43"},{"size":436,"mtime":1648489132344,"results":"77","hashOfConfig":"43"},{"size":392,"mtime":1648488942653,"results":"78","hashOfConfig":"43"},{"size":411,"mtime":1648488985431,"results":"79","hashOfConfig":"43"},{"size":415,"mtime":1648489152769,"results":"80","hashOfConfig":"43"},{"size":4188,"mtime":1648487607905,"results":"81","hashOfConfig":"43"},{"size":4679,"mtime":1648487457085,"results":"82","hashOfConfig":"43"},{"size":455,"mtime":1646941618902,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"owaqke",{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/index.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/App.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/reportWebVitals.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/context/auth.js",["227","228"],[],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst API_URL='https://volunteer-project-rs.herokuapp.com';\nconst AuthContext = React.createContext()\n\nfunction AuthProviderWrapper(props) {\n\n\tconst [admin, setAdmin] = useState(null)\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst storeToken = token => {\n\t\t// store this token in local storage\n\t\tlocalStorage.setItem('authToken', token)\n\t}\n\n\tconst removeToken = () => {                    \n\t\t// Upon logout, remove the token from the localStorage\n\t\tlocalStorage.removeItem(\"authToken\");\n\t}\n\n\tconst logoutAdmin = () => {\n\t\t// update the state\n\t\t//removeToken()\n\t\tsetIsLoggedIn(false)\n\t\tsetAdmin(null)\n\t}\n\n\tconst authenticateAdmin = () => {\n\t\t// check local storage\n\t\tconst storedToken = localStorage.getItem('authToken')\n\t\tif (storedToken) {\n\t\t\treturn axios.get(`/api/auth/verify`, { headers: { Authorization: `Bearer ${storedToken}` } })\n\t\t\t\t.then(response => {\n\t\t\t\t\tconst admin = response.data\n\t\t\t\t\tsetAdmin(admin)\n\t\t\t\t\tsetIsLoggedIn(true)\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\t// the token is invalid\n\t\t\t\t\tsetIsLoggedIn(false)\n\t\t\t\t\tsetAdmin(null)\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t})\n\t\t} else {\n\t\t\t// there is no token in local storage\n\t\t\tsetIsLoading(false)\n\t\t\tsetIsLoggedIn(false)\n\t\t\tsetAdmin(null)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t// check if we have an auth token stored\n\t\tauthenticateAdmin()\n\t\tauthenticateAdmin()\n\t\tlogoutAdmin() \n\t}, [])\n\n\treturn (\n\t\t<AuthContext.Provider value={{ isLoggedIn, admin, isLoading, storeToken, authenticateAdmin, logoutAdmin }}>\n\t\t\t{props.children}\n\t\t</AuthContext.Provider>\n\t)\n}\n\nexport { AuthProviderWrapper, AuthContext }","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/ProjectDetails.js",["229"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { Carousel } from 'react-responsive-carousel'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport axios from 'axios'\nimport NavbarVisitor from '../components/NavbarVisitor'\n\nexport default function ProjectDetails() {\n\nconst { id } = useParams()\nconst [project, setProject] = useState(null);\nconst storedToken = localStorage.getItem('authToken')\n\n\tuseEffect(() => {\n\t\taxios.get(`/api/projects/${id}`, { headers: { Authorization: `Bearer ${storedToken}` } })\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t\tsetProject(response.data)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}, [])\n\n\treturn (\n\t<>\n\t{project === null ? <div>Loading ...</div> :\n\t\t<>\n\t\t\t<NavbarVisitor />\n\t\t\t<div className=\"project-page-container bg-overlay\">\n\t\t\t<div className=\"project-container\">\n\t\t\t\t<h1 className=\"project-title\">{project.projectName}</h1>\n\t\t\t\t<hr className=\"line\"></hr>\n\t\t\t\t<div className=\"carousel-wrapper\">\n\t\t\t\t<Carousel useKeyboardArrows autoPlay infiniteLoop>\n\t\t\t\t\t{project.projectImageUrls.map(image => { \n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"carousel-single-image\" key={project._id}>\n\t\t\t\t\t\t\t\t<img src={image} alt=\"ProjectPictures\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t</Carousel>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"project-detail-container\">\n\t\t\t\t\t<h4><img className=\"map-icon\" src=\"/images/placeholder.png\" alt=\"\"/>{project.projectLocation}</h4>\n\t\t\t\t\t<h5>{project.projectStartDate}  -  {project.projectEndDate}</h5>\n\t\t\t\t\t<h4>What the project is about: </h4>\n\t\t\t\t\t<p className=\"project-text-container\">{project.projectDescription}</p>\n\t\t\t\t\t<h4>Looking for:</h4>\n\t\t\t\t\t<p className=\"project-text-container\">{project.projectSkillsNeeded}</p>\n\t\t\t\t</div>\n\t\t\t\t<hr className=\"line\"></hr>\n\t\t\t\t<div className=\"click-volunteer-container\">\n\t\t\t\t\t<h4 className=\"project-text\">Wanna Participate?</h4>\n\t\t\t\t\t<h5 className=\"project-text\">Click</h5>\n\t\t\t\t\t<img className=\"arrow-icon\" src=\"/images/down-arrow.png\" alt=\"pfeil\"/><br></br>\n\t\t\t\t\t<Link className=\"project-detail-link\" to={`/volunteer/${project._id}`}>Volunteer</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t}\n\t</>\n\t)\n}\n","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Projects.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Volunteer.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Home.js",["230","231","232"],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Events.js",["233"],[],"import React,  { useState, useEffect }  from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport NavbarVisitor from '../components/NavbarVisitor'\nimport DateFilterEvent from '../components/DateFilterEvent'\nimport SearchBarEvent from '../components/SearchBarEvent'\nimport ToggleEvent from '../components/ToggleEvent'\nimport TypeFilterEvent from '../components/TypeFilterEvent'\n\n\nexport default function Events() {\n\n    const [events, setEvents] = useState([])\n    const [query, setQuery] = useState('')\n    const [eventDate ,setEventDate] = useState('')\n    const [toggle, setToggle] = useState(false)\n    const [type, setType] = useState('')\n\n    const storedToken = localStorage.getItem('authToken')\n\n    const getAllEvents = () => {\n        axios.get('/api/events/', { headers: { Authorization: `Bearer ${storedToken}` } })\n        .then(response => {\n            console.log('response.data', response.data)\n            setEvents(response.data)\n        })\n        .catch(err => {\n           console.log(err) \n        })\n   }\n   useEffect(()=> {getAllEvents()}, [])\n\n   const handleClean = () => {\n       setEventDate('')\n   }\n\n    let filteredEvents;\n\n    if(events) {\n        filteredEvents = events.filter(event => {\n            return event.eventName.toLowerCase().includes(query)\n    })}\n    if(events && eventDate) {\n        filteredEvents = filteredEvents.filter(event => {\n            return event.eventDate === eventDate\n         })\n    }\n    if(toggle) {\n        filteredEvents = filteredEvents.filter(event => {\n            return event.eventOutdoor === true\n        })\n    }\n    if(type !== '') {\n        filteredEvents = filteredEvents.filter( event => {\n            return event.eventType.toLowerCase() === type.toLowerCase()\n       })\n    }\n   \n    return(\n    <>\n    {events === [] ? <div>Loading ...</div> :\n        <>\n            <NavbarVisitor />\n            <div className=\"heading-project-container\">\n                <h1>UPCOMING EVENTS</h1>\n            </div>\n            <div className=\"event-page-container bg-overlay-event\">\n                {/* Filter Box */}\n                <div className=\"filter-box\">\n                        <SearchBarEvent setQueryProp={setQuery}/>\n                        <TypeFilterEvent type={type} setTypeProp={setType}/>\n                        <DateFilterEvent eventDate={eventDate} setEventDateProp={setEventDate}/>\n                        <button className=\"glow-on-events\" onClick={handleClean}>Reset Date</button> \n                        <ToggleEvent setCheckProp={setToggle}/>\n                </div>\n                {/* Event List */}\n                <div className=\"event-container\">\n                {filteredEvents.map(event => {\n                    return(\n                        <div key={event._id} className=\"single-project-container\">\n                            <h1 className=\"event-title\">{event.eventName}</h1>\n                            <p>#{event.eventType}</p>\n                            <h4><img className=\"map-icon\" src=\"/images/placeholder.png\" alt=\"\"/>{event.eventLocation}</h4>\n                            <div>{event.eventDate}</div>\n                            <p>{event.eventTime}</p>\n                            <hr className=\"hr\"></hr>  \n                            <Link className=\"event-link\" to={`/events/${event._id}`}>Details</Link>\n                            <hr className=\"hr\"></hr>\n                        </div>\n                    )\n                })\n                } \n                </div>\n            </div>\n        </>\n    }\n    </>\n    )\n}","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/EventDetails.js",["234"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport NavbarVisitor from '../components/NavbarVisitor'\n\nexport default function EventDetails() {\n\n\tconst [event, setEvent] = useState(null)\n\tconst { id } = useParams()\n\n\tuseEffect(() => {\n\t\taxios.get(`/api/events/${id}`)\n\t\t\t.then(response => {\n\t\t\t\tsetEvent(response.data)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t{event === null ? <div>Loading ...</div> :\n\t\t<>\n\t\t\t<NavbarVisitor />\n\t\t\t<div className=\"project-page-container bg-overlay-event\"> \n\t\t\t<div className=\"project-container\">\n\t\t\t\t<div className=\"event-detail-container\">\n\t\t\t\t\t<div>{event.eventPicture}</div>\n\t\t\t\t\t<h1 className=\"event-title\">{event.eventName}</h1>\n\t\t\t\t\t<p>#{event.eventType}</p>\n\t\t\t\t\t<h4><img className=\"map-icon\" src=\"/images/placeholder.png\" alt=\"\"/>{event.eventLocation}</h4>\n\t\t\t\t\t<p>{event.eventDate}</p>\n\t\t\t\t\t<p>{event.eventTime}</p>\n\t\t\t\t\t<h4>What the event is about:</h4> \n\t\t\t\t\t<p>{event.eventDescription}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</>\n\t\t\t}\n    \t</>\n\t)\n}","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/ProjectVolunteerList.js",["235","236"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios';\nimport VolunteersProjectSearchBar from '../components/VolunteersProjectSearchBar';\nimport VolunteerToggle from '../components/VolunteerToggle';\n\nexport default function ProjectVolunteerList() {\n\nconst { id } = useParams();\nconst [project, setProject] = useState('');\nconst [toggle, setToggle] = useState(false)\nconst [search, setSearch] = useState('');\n\nconst storedToken = localStorage.getItem('authToken')\n\n// getting specific project from db\nuseEffect(() => {\n  axios.get(`/api/projects/${id}`, { headers: { Authorization: `Bearer ${storedToken}` }})\n    .then(response => {\n      // console.log(response.data)\n      setProject(response.data)\n    })\n    .catch(err => console.log(err))\n}, [])\n\n\nif(project === '') {\n  return <>No Applications so far...</>\n}\n  // filtering firstName and lastName by Search-Input \n  let filteredApplications = project.volunteerApplications.filter(application => {\n    if(application.firstName.toLowerCase().includes(search.toLowerCase()) || application.lastName.toLowerCase().includes(search.toLowerCase())){\n      return application\n    }\n  })\n  // toggle checkbos to get appl. with tools\n  if(toggle){\n    filteredApplications = filteredApplications.filter(application => {\n      return application.hasTools === true\n   })\n  }\n\n  return (\n    <>\n    <VolunteersProjectSearchBar project={project} setSearch={setSearch} search={search}/>\n    <VolunteerToggle setToggle={setToggle}/>\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <table>\n            <thead>\n              <tr>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Address</th>\n                <th>E-Mail</th>\n                <th>Phone</th>\n                <th>Available from</th>\n                <th>Available to</th>\n                <th>Experience</th>\n                <th>Has Tools</th>\n                <th>Tools</th>\n                <th>Message</th>\n              </tr>\n            </thead>\n            <tbody>\n            {filteredApplications.map(application => {\n              console.log('application', application)\n              return (\n              <>\n              <tr key={application._id}>\n                  <td>{application.firstName}</td>\n                  <td>{application.lastName}</td>\n                  <td>{application.street}, {application.zip} {application.city}</td>\n                  <td>{application.email}</td>\n                  <td>{application.phone}</td>\n                  <td>{application.timeFrom}</td>\n                  <td>{application.timeTo}</td>\n                  <td>{application.experience}</td>\n                  <td>{application.hasTools && 'X'}</td>\n                  <td>{application.tools}</td>\n                  <td>{application.personalMessage}</td>\n              </tr>\n              </>\n              )\n            })}\n            </tbody>\n          </table>\n      </div>\n    </>\n  )\n}\n","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/AdminDashboard.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/EditProject.js",["237"],[],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport service from '../api/service'\n\nexport default function EditProject(props) {\n  // States\n  const [projectName, setProjectName] = useState('')\n  const [projectLocation, setProjectLocation] = useState('')\n  const [projectStartDate, setProjectStartDate] = useState('')\n  const [projectEndDate, setProjectEndDate] = useState('')\n  const [projectDescription, setProjectDescription] = useState('')\n  const [projectSkillsNeeded, setProjectSkillsNeeded] = useState('')\n  const [projectImageUrl, setProjectImageUrl] = useState([]);\n\n  // where to change the data gained from edit\n  const handleEdit = e => {\n    e.preventDefault()\n\t\tconst requestBody = { projectName, projectLocation, projectStartDate, projectEndDate, projectDescription, projectSkillsNeeded, projectImageUrl }\n\t\taxios.put(`/api/projects/${props.specificproject._id}`, requestBody)\n\t\t\t.then(() => {\n        // actualize the projects rendered\n        props.refreshProjects()\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n  // ******** this method handles just the file upload ********\n const handleFileUpload = e => {\n  // console.log(\"The file to be uploaded is: \", e.target.files[0]);\n  const uploadData = new FormData();\n  uploadData.append(\"projectImageUrl\", e.target.files[0]);\n  service\n    .uploadImage(uploadData)\n    .then(response => {\n      setProjectImageUrl([...projectImageUrl, response.secure_url]);\n    })\n    .catch(err => console.log(\"Error while uploading the file: \", err));\n};\n  \n  const storedToken = localStorage.getItem('authToken')\n\n  // get specific project from backend to edit it\n  const getProjectToEdit = () => {\n\t\taxios.get(`/api/projects/${props.specificproject._id}`, { headers: { Authorization: `Bearer ${storedToken}` } })\n    .then(response => {\n      console.log('axiosgetproject', response.data);\t\n        const { projectName } = response.data\n        const { projectLocation } = response.data\n        const { projectStartDate } = response.data\n        const { projectEndDate } = response.data\n        const { projectDescription } = response.data\n        const { projectSkillsNeeded } = response.data\n        const { projectImageUrl } = response.data\n        // console.log('response.data.edit', response.data)\n          setProjectName(projectName)\n          setProjectLocation(projectLocation)\n          setProjectStartDate(projectStartDate)\n          setProjectEndDate(projectEndDate)\n          setProjectDescription(projectDescription)\n          setProjectSkillsNeeded(projectSkillsNeeded)\n          setProjectImageUrl(projectImageUrl)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n  }\n  // use the Project that we got from API\n  useEffect(() => {getProjectToEdit()}, [])\n\n  return (\n    <>\n       <div>EditProject</div>\n       <form onSubmit={handleEdit}> \n        <label>Projectname: </label>\n        <input id=\"projectName\" type=\"text\" value={projectName} onChange={e => setProjectName(e.target.value)}/>\n        <label>Location: </label>\n        <input id=\"projectLocation\" type=\"text\" value={projectLocation} onChange={e => setProjectLocation(e.target.value)}/>\n        <label>Start Date: </label>\n        <input id=\"projectStartDate\" type=\"date\" value={projectStartDate} onChange={e => setProjectStartDate(e.target.value)}/>\n        <label>End Date: </label>\n        <input id=\"projectEndDate\" type=\"date\" value={projectEndDate} onChange={e => setProjectEndDate(e.target.value)}/>\n        <label>Description: </label>\n        <input id=\"projectDescription\" type=\"text\" value={projectDescription} onChange={e => setProjectDescription(e.target.value)}/>\n        <label>Looking For: </label>\n        <input id=\"projectSkillsNeeded\" type=\"text\" value={projectSkillsNeeded} onChange={e => setProjectSkillsNeeded(e.target.value)}/>\n        {/* file upload img cloudinary */}\n        <div>\n            <h2>Upload images</h2>\n            <input id=\"projectImages\" name=\"imageUpload\" type=\"file\" onChange={(e) => handleFileUpload(e)}/>\n        </div>\n        <button type='submit'>Save Changes</button>\n       </form>\n    </>\n  )\n}\n","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/VolunteersFullList.js",["238","239"],[],"import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\nimport VolunteersSearchBar from '../components/VolunteersSearchBar'\nimport VolunteerToggle from '../components/VolunteerToggle';\n\nexport default function VolunteersFullList() {\n\nconst [volunteers, setVolunteers] = useState([]);\nconst [toggle, setToggle] = useState(false)\nconst [search, setSearch] = useState('')\n\nconst storedToken = localStorage.getItem('authToken')\n\nconst getAllVolunteers = () => {\n    axios.get('/api/volunteers', { headers: { Authorization: `Bearer ${storedToken}` }})\n    .then(response => {\n        console.log(response)\n        setVolunteers(response.data)\n        console.log('volunteers', response.data)\n        console.log(volunteers)\n      })\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {getAllVolunteers()}, [])\n\n\n  if(volunteers === []) {\n    return <>No Applications so far...</>\n  }\n    // filtering firstName and lastName by Search-Input \n    let filteredVolunteers = volunteers.filter(volunteer => {\n      if(volunteer.firstName.toLowerCase().includes(search.toLowerCase()) || volunteer.lastName.toLowerCase().includes(search.toLowerCase())){\n        return volunteer\n      }\n    })\n    \n    if(toggle){\n      filteredVolunteers = filteredVolunteers.filter(volunteer => {\n        return volunteer.hasTools === true\n     })\n}\n    return (\n      <>\n      <VolunteersSearchBar volunteers={volunteers} setSearch={setSearch} search={search}/>\n      <VolunteerToggle setToggle={setToggle}/>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <table>\n              <thead>\n                <tr>\n                  <th>First Name</th>\n                  <th>Last Name</th>\n                  <th>Address</th>\n                  <th>E-Mail</th>\n                  <th>Phone</th>\n                  <th>Available from</th>\n                  <th>Available to</th>\n                  <th>Experience</th>\n                  <th>Has Tools</th>\n                  <th>Tools</th>\n                  <th>Message</th>\n                </tr>\n              </thead>\n              <tbody>\n              {filteredVolunteers.map(volunteer => {\n                return (\n                <>\n                <tr key={volunteer._id}>\n                    <td>{volunteer.firstName}</td>\n                    <td>{volunteer.lastName}</td>\n                    <td>{volunteer.street}, {volunteer.zip} {volunteer.city}</td>\n                    <td>{volunteer.email}</td>\n                    <td>{volunteer.phone}</td>\n                    <td>{volunteer.timeFrom}</td>\n                    <td>{volunteer.timeTo}</td>\n                    <td>{volunteer.experience}</td>\n                    <td>{volunteer.hasTools && 'X'}</td>\n                    <td>{volunteer.tools}</td>\n                    <td>{volunteer.personalMessage}</td>\n                </tr>\n                </>\n                )\n              })}\n              </tbody>\n            </table>\n        </div>\n      </>\n    )\n  }\n\n","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/EditEvent.js",["240"],[],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'\nimport service from '../api/service'\n\nexport default function EditProject(props) {\n\n\tconst [eventName, setEventName] = useState('');\n\tconst [eventDescription, setEventDescription] = useState('');\n  \tconst [eventDate, setEventDate] = useState('')\n  \tconst [eventTime, setEventTime] = useState('')\n  \tconst [eventType, setEventType] = useState('')\n  \tconst [eventPicture, setEventPicture] = useState([])\n  \tconst [eventLocation, setEventLocation] = useState('')\n  \tconst [eventOutdoor, setEventOutdoor] = useState(false)\n\t\n\tconst options = [\n    \t{label:'All', value:'all'},\n        {label: 'Music', value: 'music' },\n        {label: 'Food', value: 'food'},\n        {label: 'Sports', value: 'sports' },\n        {label: 'Arts', value: 'arts' },\n        {label: 'Building', value: 'building' },\n        {label: 'Meetups', value: 'meetups' },\n        {label: 'Social Volunteer', value: 'social volunteer' },\n    ]\n  \n  \n\tconst { id } = useParams()\n\t\n\n\tconst handleSubmit = e => {\n\t\tconsole.log()\n\t\te.preventDefault()\n\t\tconst requestBody = { eventName, eventDescription, eventDate, eventTime, eventType, eventPicture, eventLocation, eventOutdoor }\n\t\taxios.put(`/api/event/${id}`, requestBody)\n\t\t\t.then(() => {\n\t\t\t\tprops.refreshEvents()\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\tconst handleFileUpload = e => {\n\t\t// console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\t\tconst uploadData = new FormData();\n\t\tuploadData.append(\"eventPicture\", e.target.files[0]);\n\t\tservice\n\t\t  .uploadImage(uploadData)\n\t\t  .then(response => {\n\t\t\tsetEventPicture([...eventPicture, response.secure_url]);\n\t\t  })\n\t\t  .catch(err => console.log(\"Error while uploading the file: \", err));\n\t  };\n\n\n\tconst storedToken = localStorage.getItem('authToken')\n\n\tconst getEventToEdit = () => {\n\t\taxios.get(`/api/event/${id}`, { headers: { Authorization: `Bearer ${storedToken}` } })\n\t\t.then(response =>{\n\t\t\tconst { eventName, eventDescription, eventDate, eventTime, eventType, eventPicture, eventLocation, eventOutdoor } = response.data\n\t\t\t\tsetEventName(eventName)\n\t\t\t\tsetEventDescription(eventDescription)\n        \t\tsetEventDate(eventDate)\n        \t\tsetEventTime(eventTime)\n        \t\tsetEventType(eventType)\n        \t\tsetEventPicture(eventPicture)\n       \t\t\tsetEventLocation(eventLocation)\n\t\t\t\tsetEventOutdoor(eventOutdoor)\n\t\t})\n\t\t.catch(err => console.log(err))\n\t}\n\tuseEffect(() => { getEventToEdit()}, [])\n\n\t\n    const handleCheckBox = e => setEventOutdoor(e.target.value)\n\tconst handleEventType = e => setEventType(e.target.value)\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Edit <>{eventName}</> event</h1>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<label htmlFor=\"eventName\">Event name </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventName\"\n\t\t\t\t\tname='eventName'\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={eventName}\n\t\t\t\t\tonChange={e => setEventName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"eventName\">Description </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventDescription\"\n\t\t\t\t\tname='eventDescription'\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={eventDescription}\n\t\t\t\t\tonChange={e => setEventDescription(e.target.value)}\n\t\t\t\t/>\n        <div>\n            Event Type\n        </div>\n        <div>\n        <label>\n            <select value={eventType} onChange={handleEventType}>\n                {options.map((option) => (\n                <option value={option.value}>{option.label}</option>\n                ))}\n            </select>\n        </label>\n        </div>\n        <label htmlFor=\"eventName\">Date </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventDate\"\n\t\t\t\t\tname='eventDate'\n\t\t\t\t\ttype=\"date\"\n\t\t\t\t\tvalue={eventDate}\n\t\t\t\t\tonChange={e => setEventDate(e.target.value)}\n\t\t\t\t/>\n        <label htmlFor=\"eventName\">Time </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventTime\"\n\t\t\t\t\tname='eventTime'\n\t\t\t\t\ttype=\"time\"\n\t\t\t\t\tvalue={eventTime}\n\t\t\t\t\tonChange={e => setEventTime(e.target.value)}\n\t\t\t\t/>\n        <label htmlFor=\"eventName\">Location </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventLocation\"\n\t\t\t\t\tname='eventLocation'\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={eventLocation}\n\t\t\t\t\tonChange={e => setEventLocation(e.target.value)}\n\t\t\t\t/>\n\t\t<div>\n            Outdoor\n            <input type=\"checkBox\" value={eventOutdoor} name='outdoors' onChange={handleCheckBox}/>\n        </div>\n        <div>\n            <h2>Upload images</h2>\n            <input id=\"eventPicture\" name=\"imageUpload\" type=\"file\" onChange={(e) => handleFileUpload(e)}/>\n        </div>\n\t\t\t\t\n\t\t\t\t<button type=\"submit\">Update this project</button>\n\t\t\t</form>\n\t\t\t\n\t\t\t\n\t\t</>\n\n\t)\n}\n\n","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/IsPrivate.js",["241"],[],"import { useContext } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { AuthContext } from '../context/auth'\n\nexport default function ( { children } ) {\n  \n  const { isLoggedIn, isLoading } = useContext(AuthContext);\n\n  if (isLoading) return <p>Loading ...</p>;\n  if (!isLoggedIn) {\n    return <Navigate to=\"/behind-the-scences/login\" />;\n  } else {\n  // If the admin is logged in, allow to see the page \n    return children;\n  }\n}\n\n","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesLog/Login.js",["242","243"],[],"import React, { useState, useContext } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { AuthContext } from '../context/auth'\n\nconst API_URL = 'https://volunteer-project-rs.herokuapp.com';\n\nexport default function Login() {\n\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [errorMessage, setErrorMessage] = useState(undefined);\n\n\tconst navigate = useNavigate()\n\n\tconst { storeToken, authenticateAdmin } = useContext(AuthContext)\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault()\n\t\tconst requestBody = { email, password }\n\t\taxios.post(`/api/auth/login`, requestBody)\n\t\t\t.then(response => {\n\t\t\t\t\n\t\t\t\tconsole.log('we have a token')\n\t\t\t\tconst token = response.data.authToken\n\t\t\t\t// store the token\n\t\t\t\tstoreToken(token)\n\t\t\t\tauthenticateAdmin()\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t// redirect to projects\n\t\t\t\t\t\tnavigate('/behind-the-scences')\n\t\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\n\tconst handleEmail = e => setEmail(e.target.value)\n\tconst handlePassword = e => setPassword(e.target.value)\n\n\treturn (\n\t\t<> \n            <div className='signup-background'>\n\t\t\t\t<div className='sign-box'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Login</h3>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\t\t\t\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<div className='signup-box-together'>\n\t\t\t\t\t\t\t\t<div className='signup-text-input'><label htmlFor=\"email\">Email </label></div>\n\t\t\t\t\t\t\t\t<input className='signup-input-box'\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tplaceholder={email}\n\t\t\t\t\t\t\t\tonChange={handleEmail} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='signup-box-together'>\n\t\t\t\t\t\t\t\t<div className='signup-text-input'><label htmlFor=\"password\">Password: </label></div>\n\t\t\t\t\t\t\t\t<input className='signup-input-box'\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tplaceholder='******'\n\t\t\t\t\t\t\t\tonChange={handlePassword} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"glow-on-hover\">Log In</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n            \t\t</div>\n\t\t\t\t\t{errorMessage && <h3>{errorMessage}</h3>}\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\tDon't have an account?<Link to='/behind-the-scences/signup'>Signup</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </div>\n\t\t</>\n\t)\n}","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesLog/Signup.js",["244"],[],"import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\n\n\nconst API_URL='https://volunteer-project-rs.herokuapp.com'\n\nexport default function Signup() {\n\n\tconst [name, setName] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [errorMessage, setErrorMessage] = useState(undefined)\n\n\tconst navigate = useNavigate()\n\n\tconst handleSubmit = e => {\n\t\t\n\t\te.preventDefault()\n\t\tconst requestBody = { email, password, name }\n\t\taxios.post(`/api/auth/signup`, requestBody)\n\t\t\t.then(response => {\n\t\t\t\tnavigate('/behind-the-scences/login')\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconst errorDescription = err.response.data.message\n\t\t\t\tsetErrorMessage(errorDescription)\n\t\t\t})\n\t}\n\n\tconst handleEmail = e => setEmail(e.target.value)\n\tconst handleName = e => setName(e.target.value)\n\tconst handlePassword = e => setPassword(e.target.value)\n\t\n\n\treturn (\n\t\t<>\n\t\t\t<div className='signup-background'>\n            \t<div className='sign-box'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Signup</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<div className='signup-box-together'>\n\t\t\t\t\t\t\t\t<div className='signup-text-input'><label htmlFor=\"email\">Email </label></div>\n\t\t\t\t\t\t\t\t<input className='signup-input-box'\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tplaceholder='foo@foo.com'\n\t\t\t\t\t\t\t\tonChange={handleEmail} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='signup-box-together'>\n\t\t\t\t\t\t\t\t<div className='signup-text-input'><label htmlFor=\"password\">Password </label></div>\t\t\t\t\n\t\t\t\t\t\t\t\t<input className='signup-input-box'\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tplaceholder='******'\n\t\t\t\t\t\t\t\tonChange={handlePassword} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='signup-box-together'>\n\t\t\t\t\t\t\t\t<div className='signup-text-input'><label for=\"cpassword\">Confirm Password</label></div>\n          \t\t\t\t\t\t<input type=\"password\" id=\"cpassword\" name=\"cpassword\" placeholder='******' className='signup-input-box' required=\"required\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='signup-box-together'>\n\t\t\t\t  \t\t\t\t<div className='signup-text-input'><label htmlFor=\"name\">Admin name </label></div>\n\t\t\t\t\t\t\t\t<input className='signup-input-box'\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tplaceholder='Foo'\n\t\t\t\t\t\t\t\tonChange={handleName} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<button class=\"glow-on-hover\" type=\"submit\">Sign Up</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t{errorMessage && <h5>{errorMessage}</h5>}\n            \t\t<div>\n\t\t\t\t\t\tAlready have an Account?<Link to='/behind-the-scences/login'>Login</Link>\n            \t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/NavbarVisitor.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/NavbarHome.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ProjectListVisitor.js",["245"],[],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n\nexport default function ProjectListVisitor() {\n// State of Projects\nconst [projects, setProjects] = useState([])\n\nconst storedToken = localStorage.getItem('authToken')\n\n// get all projects from the backend\nconst getAllProjects = () => {\n  // request 'api/projects'\n  // for every request to a project route we need to also send the token\n  axios.get('/api/projects/', { headers: { Authorization: `Bearer ${storedToken}` } })\n      .then(response => {\n          // log response from db\n          console.log('response.data',response.data)\n          // set the state of projects\n          setProjects(response.data)\n      })\n      .catch(err => {\n          console.log(err)\n      })\n}\nuseEffect(() => {getAllProjects()}, [])\n\n    return(\n      <>\n        {projects.map(project => {\n            return (\n                <div className=\"single-project-container\" key={project._id}>\n                    <h1 className=\"project-title\">{project.projectName.toUpperCase()}</h1>\n                    <h2 className=\"project-text\">{project.projectLocation}</h2>\n                    <h3 className=\"project-text\">{project.projectStartDate} - {project.projectEndDate}</h3>\n                    {/* <hr className=\"line-two\"></hr> */}\n                    <Link className=\"project-link\" to={`/projects/${project._id}`}>Details & Volunteer</Link>\n                    {/* <hr className=\"line-two\"></hr> */}\n                </div>\n            )\n        })\n        }\n      </>\n    )\n}","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/Menu.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/SearchBarEvent.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ToggleEvent.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/DateFilterEvent.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/TypeFilterEvent.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/VolunteerForm.js",["246"],[],"import React, { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\n\n\nexport default function VolunteerForm() {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [street, setStreet] = useState('')\n    const [zip, setZip] = useState('')\n    const [city, setCity] = useState('')\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [timeFrom, setTimeFrom] = useState('');\n    const [timeTo, setTimeTo] = useState('');\n    const [experience, setExperience] = useState('');\n    const [hasTools, setHasTools] = useState(false)\n    const [tools, setTools] = useState('');\n    const [personalMessage, setPersonalMessage] = useState('');\n    const [projectAppliedFor, setProjectAppliedFor] = useState('');\n\n    // save id to assign it to projectAppliedFor\n    const { id } = useParams()\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        // send the data from the state as a post request to the backend \n        axios.post('/api/volunteers/create', { \n            firstName,\n            lastName,\n            street,\n            city,\n            zip,\n            email,\n            phone,\n            timeFrom,\n            timeTo,\n            experience,\n            hasTools,\n            tools,\n            personalMessage,\n            projectAppliedFor: id\n         })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(err => console.log(err))\n        // reset the state\n            setFirstName('')\n            setLastName('')\n            setStreet('')\n            setCity('')\n            setZip('')\n            setEmail('')\n            setPhone('')\n            setTimeFrom('')\n            setTimeTo('')\n            setExperience('')\n            setHasTools(false)\n            setTools('')\n            setPersonalMessage('')\n            setProjectAppliedFor('')\n    }\n\n  return (\n  <> \n    <div className=\"project-page-container bg-overlay-volunteer\">\n    <div className=\"heading-project-container\"><h1>Become a volunteer</h1></div>\n    <div className=\"project-container-volunteer\">\n    <form className=\"volunteer-form\" onSubmit={handleSubmit}>\n            <div className=\"inputfield-container\">\n            <label className=\"label-form\">Name: </label>\n                <input className='inputfield' id=\"firstName\" name=\"firstName\"  type=\"text\" placeholder='First Name' value={firstName} onChange={e => setFirstName(e.target.value)}/>\n                <input className=\"inputfield\" id=\"lastName\" name=\"lastName\"  type=\"text\" placeholder='Last Name' value={lastName} onChange={e => setLastName(e.target.value)}/>\n            <label className=\"label-form\">Address: </label>\n                <input className=\"inputfield\" id=\"street\" name=\"street\"  type=\"text\" placeholder='Street and Nr.' value={street} onChange={e => setStreet(e.target.value)}/>\n                <input className=\"inputfield\" id=\"zip\" name=\"zip\"  type=\"number\" placeholder='Zip Code' value={zip} onChange={e => setZip(e.target.value)}/>\n                <input className=\"inputfield\" id=\"city\" name=\"city\"  type=\"text\" placeholder='City' value={city} onChange={e => setCity(e.target.value)}/>\n            <label className=\"label-form\">Contact: </label>\n                <input className=\"inputfield\" id=\"email\" name=\"email\"  type=\"email\" placeholder='E-Mail' value={email} onChange={e => setEmail(e.target.value)}/>\n                <input className=\"inputfield\" id=\"phone\" name=\"phone\"  type=\"number\" placeholder='Phone' value={phone} onChange={e => setPhone(e.target.value)}/>\n            <label className=\"label-form\">From when to when do you have time? </label>\n                <input className=\"inputfield\" id=\"timeFrom\" name=\"timeFrom\" type=\"date\" placeholder='Can join from...' value={timeFrom} onChange={e => setTimeFrom(e.target.value)}/>\n                <input className=\"inputfield\" id=\"timeTo\" name=\"timeTo\" type=\"date\" placeholder='...until' value={timeTo} onChange={e => setTimeTo(e.target.value)}/>\n            <label className=\"label-form\">With what are you experienced? Any special skills? </label>\n                <input className=\"inputfield\" id=\"experience\" name=\"experience\" type=\"text\" placeholder='Experience' value={experience} onChange={e => setExperience(e.target.value)}/>\n            <label className=\"label-form\">Can you bring tools? </label>\n            <div className=\"checkbox-container\">\n                <input className=\"checkbox\" id=\"hasTools\" name=\"hasTools\" type=\"checkbox\" value={hasTools} onChange={e => setHasTools(e.target.checked)}/> Yes\n                <input className=\"checkbox\" name=\"no\" type=\"checkbox\"/> No\n            </div>\n            {hasTools && <label className=\"label-form\">Which ones? </label>\n                }\n            {hasTools && \n                <input className=\"inputfield\" id=\"tools\" name=\"tools\" type=\"text\" placeholder='Tools' value={tools} onChange={e => setTools(e.target.value)}/>\n            }\n            <label className=\"label-form\">Leave us a message</label>\n                <input className=\"inputfield-message\" id=\"personalMessage\" name=\"personalMessage\" type=\"text\" placeholder='Something you wanna tell us?' value={personalMessage} onChange={e => setPersonalMessage(e.target.value)}/>\n            <button className=\"btn-form\" type=\"submit\">Apply to Volunteer</button>\n        </div>\n    </form>\n    </div>\n    </div>\n  </>  \n  )\n}\n","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/VolunteerToggle.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/NavbarAdmin.js",["247"],[],"import { Link } from 'react-router-dom'\nimport React, { useContext } from 'react'                     \nimport { AuthContext } from '../context/auth' \n\nfunction NavbarAdmin() {\n  // Subscribe to the AuthContext to gain access to\n  // the values from AuthContext.Provider `value` prop\n  const { isLoggedIn, logOutAdmin } = useContext(AuthContext);   // <== ADD\n  //  Update the rendering logic to display different content \n  //  depending on the user being logged in or not\n  return (\n    <nav className=\"nav-visitor\">\n      <div className=\"nav-links-container\">\n        <Link className=\"nav-link\" to=\"/\">HOME</Link>\n        {isLoggedIn && (\n          <>\n            |\n            <Link to=\"/\"className=\"nav-link\"> LOGOUT</Link>\n          </>\n        )}\n        {!isLoggedIn && (\n          <>\n            <Link to=\"/signup\"> <button>Sign Up</button> </Link>\n            <Link to=\"/login\"> <button>Login</button> </Link>\n          </>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nexport default NavbarAdmin;\n","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/VolunteersProjectSearchBar.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ProjectList.js",["248"],[],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport PopUpEditProject from './PopUpEditProject'\nimport PopUpCreateProject from './PopUpCreateProject'\n\n\nexport default function ProjectList(props){\n// State of Projects\nconst [projects, setProjects] = useState([])\nconst [showCreateProject, setShowCreateProject] = useState(false)\nconst [projectToBeEdited, setProjectToBeEdited] = useState(null)\n\nconst storedToken = localStorage.getItem('authToken')\n// Handle PopUp\nconst handleProjectToBeEdited = project => {\n  console.log('project', project)\n  setProjectToBeEdited(project)}\n\n// get all projects from the backend\nconst getAllProjects = () => {\n  // request 'api/projects'\n  // for every request to a project route we need to also send the token\n  axios.get('/api/projects', { headers: { Authorization: `Bearer ${storedToken}` } })\n      .then(response => {\n          console.log('response.data',response.data)\n          // set the state of projects\n          setProjects(response.data)\n      })\n      .catch(err => {\n          console.log(err)\n      })\n}\nuseEffect(() => {getAllProjects()}, [])\n\n  return(\n    <>\n      <div>\n        <div  className=\"dash-title-box\">\n          Projects\n          <div>\n            <button className=\"create-btn\" onClick={() => setShowCreateProject(!showCreateProject)}>+</button>\n              {showCreateProject && (\n                <PopUpCreateProject refreshProjects={getAllProjects} handleClose={() => setShowCreateProject(false)}/>\n              )}\n          </div>\n          </div>\n          <div>\n            <button className=\"drop-down-btn\"><img className=\"img-arrow\" src=\"/images/drop-down-arrow.png\" alt=\"pfeil\"></img></button>\n          </div>\n        </div>\n        <div>\n          {projects.map(project => {\n            return (\n              <>\n                <div key={project._id} className=\"dash-list-item\">\n                  <div className=\"dash-list-title\">{project.projectName}</div>\n                  <div className=\"dash-btn-container\">\n                    <button className=\"dash-btn\" onClick={() => {handleProjectToBeEdited(project)}}>Edit</button>\n                      {projectToBeEdited && <PopUpEditProject\n                     handleClose={() => {setProjectToBeEdited(null)}} thisproject={projectToBeEdited} refreshProjects={getAllProjects}/>\n                      }\n                    <button className=\"dash-btn\" onClick={()=>{\n                      axios.delete(`/api/projects/${project._id}`, { headers: { Authorization: `Bearer ${storedToken}` } })\n                      .then(deletedProject => {\n                        console.log('deletedProject', deletedProject)\n                        // get all projects to show immediately list of projects without deleted item\n                        getAllProjects();\n                        })\n                      .catch(err => console.log(err))\n                    }}>Delete</button>\n                  </div>\n                </div>\n                <div className=\"vol-link-container\">\n                  <img className=\"map-icon\" src='/images/side-arrow.png' alt='arrow'/>\n                  <Link className=\"vol-link-dash\" to={`/behind-the-scences/project/volunteer/${project._id}`}>See Applications</Link>\n                </div>\n              </>\n            )}\n          )}      \n      </div>\n    </>\n  )  \n}","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/VolunteersSearchBar.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/EventList.js",["249"],[],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport PopupCreateEvent from './PopupCreateEvent'\nimport PopupEditEvent from './PopUpEditEvent'\n\n\nexport default function EventList() {\n    \n  const [events, setEvents] = useState([])\n  const [showCreateEvent, setShowCreateEvent] = useState(false)\n  const [eventToEdit, setEventToEdit] = useState(null)\n    \n  const storedToken = localStorage.getItem('authToken')\n    \n  //popup handle\n  const handlePopupEdit = event => {\n    setEventToEdit(event)\n  }\n    \n  //get events from backend\n  const getAllEvents = () => {\n    axios.get('/api/events/', {headers: {Authorization: `Bearer ${storedToken}`}})\n      .then(response => {\n        console.log('response.data',response.data)\n        setEvents(response.data)\n      })\n      .catch(err => {console.log(err)})\n  }\n  useEffect(() => {getAllEvents()}, [])\n    \n  return(\n    <>\n      <div>\n        <div className=\"dash-title-box\">\n          Events\n          <div>\n            <button className=\"create-btn\" onClick={()=> setShowCreateEvent(!showCreateEvent)}>+</button>\n              {showCreateEvent && (\n                <PopupCreateEvent refreshEvents={getAllEvents} handleClose={() => setShowCreateEvent(false)}/>\n              )}\n          </div>\n        </div>\n        <div>\n          <button className=\"drop-down-btn\"><img className=\"img-arrow\" src=\"/images/drop-down-arrow.png\" alt=\"pfeil\"></img></button>\n        </div>\n      </div>\n      <div>\n        {events.map(event =>\n          <div className=\"dash-list-item\" key={event._id}>\n            <div className=\"dash-list-title\">{event.eventName}</div>\n            <div className=\"dash-btn-container\">\n              <button  className=\"dash-btn\" onClick={() => {handlePopupEdit(event)}}>Edit</button>\n              {eventToEdit && <PopupEditEvent handleClose={() => {setEventToEdit(null)}} thisevent={eventToEdit} refreshEvents={getAllEvents}/>}\n              <button  className='dash-btn' onClick={() => {\n                axios.delete(`/api/events/${event._id}`, { headers: { Authorization: `Bearer ${storedToken}` } })\n                  .then(deletedProject => {\n                    console.log('deletedEvent', deletedProject)\n                    getAllEvents();\n                  })\n                  .catch(err => console.log(err))\n              }}>Delete</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  )  \n}","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/api/service.js",["250"],[],"import axios from \"axios\";\n\nconst service = axios.create({\n  baseURL: \"https://collective-app-2.herokuapp.com/api\"\n  // withCredentials: true // => you might need this option if using cookies and sessions\n});\n\nconst errorHandler = err => {\n  throw err;\n};\n\nconst uploadImage = (file) => {\n  return service\n    .post(\"projects/upload\", file)\n    .then(res => res.data)\n    .catch(errorHandler);\n};\n\nexport default {\n  service,\n  uploadImage\n};","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/PopUpEditProject.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/PopupCreateEvent.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/PopUpCreateProject.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/PopUpEditEvent.js",[],[],"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/CreateProject.js",["251"],[],"import React, { useState } from 'react'\nimport axios from 'axios'\n// import the service file since we need it to send the data to the server (for file upload)\nimport service from '../api/service'\n\nexport default function CreateProject(props) {\n\nconst [projectName, setProjectName] = useState('')\nconst [projectLocation, setProjectLocation] = useState('')\nconst [projectStartDate, setProjectStartDate] = useState('')\nconst [projectEndDate, setProjectEndDate] = useState('')\nconst [projectDescription, setProjectDescription] = useState('')\nconst [projectSkillsNeeded, setProjectSkillsNeeded] = useState('')\nconst [projectImageUrls, setProjectImageUrls] = useState([]);\n\nconst handleSubmit = e => {\n    e.preventDefault()\n    // send the data from the state as a post request to the backend\n    const requestBody = { \n        projectName,\n        projectLocation,\n        projectStartDate,\n        projectEndDate,\n        projectDescription,\n        projectSkillsNeeded,\n        projectImageUrls\n     }\n     console.log('requestBody', requestBody)\n\n\taxios.post('/api/projects/create', requestBody)\n        .then(response => {\n            console.log(response)\n        })\n        .catch(err => console.log(err))\n    // reset the state\n    setProjectName('')\n    setProjectLocation('')\n    setProjectStartDate('')\n    setProjectEndDate('')\n    setProjectDescription('')\n    setProjectSkillsNeeded('')\n    setProjectImageUrls([])\n    // actualize the projects rendered\n    props.refreshProjects()\n}\n\n // ******** this method handles just the file upload ********\n const handleFileUpload = e => {\n    const uploadData = new FormData();\n    const uploadedFiles = [...e.target.files]\n\n    console.log(uploadedFiles)\n    console.log(e.target.files[0])\n    \n    uploadedFiles.map(file  => {\n    console.log(file)\n    uploadData.append(\"projectImageUrls\", file);\n    service\n      .uploadImage(uploadData)\n      .then(response => {\n          console.log('response.secure_url', response.secure_url)\n        setProjectImageUrls([...response.secure_url, ...projectImageUrls]);\n      })\n      .catch(err => console.log(\"Error while uploading the file: \", err));\n    })\n  };\n\n    return (\n    <>\n      <h2>Create a new Project</h2>\n      <form className=\"popUp-form\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n        <div className=\"popUp-container\">\n          <label className=\"label-popUp\">Name</label>\n          <input className=\"inputfield\" id=\"projectName\" name=\"projectName\"  type=\"text\" value={projectName} onChange={e => setProjectName(e.target.value)} />\n          <label className=\"label-popUp\">Location</label>\n          <input className=\"inputfield\" id=\"projectLocation\" name=\"projectLocation\"  type=\"text\" value={projectLocation} onChange={e => setProjectLocation(e.target.value)}></input>\n          <label className=\"label-popUp\">Project Start</label>\n          <input className=\"inputfield date-input\" id=\"projectStartDate\" name=\"projectStartDate\"  type=\"date\" value={projectStartDate} onChange={e => setProjectStartDate(e.target.value)}></input>\n          <label className=\"label-popUp\">Project End</label>\n          <input className=\"inputfield date-input\" id=\"projectEndDate\" name=\"projectEndDate\" type=\"date\" value={projectEndDate} onChange={e => setProjectEndDate(e.target.value)}></input>\n          <label className=\"label-popUp\">Project Description</label>\n          <input className=\"inputfield\" id=\"projectDescription\" name=\"projectDescription\" type=\"text\" value={projectDescription} onChange={e => setProjectDescription(e.target.value)}></input>\n          <label className=\"label-popUp\">Looking for Volunteers</label>\n          <input className=\"inputfield\" id=\"projectSkillsNeeded\" name=\"projectSkillsNeeded\" type=\"text\" value={projectSkillsNeeded} onChange={e => setProjectSkillsNeeded(e.target.value)}></input>\n        {/* file upload img cloudinary */}\n        <div>\n          <h2>Upload images</h2>\n          <input className=\"inputfield\" id=\"projectImages\" name=\"projectImageUrls\" type=\"file\" onChange={(e) => handleFileUpload(e)} multiple/>\n        </div>\n        </div>\n        <button className=\"popUp-btn\" type=\"submit\">+</button>\n    </form>\n    </>\n  )\n}\n","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/CreateEvent.js",["252"],[],"import React, {useState} from 'react'\nimport axios from 'axios'\nimport serviceEvent from '../api/serviceEvent'\n\n\n\nexport default function CreateEvent(props) {\n\n  const [eventName, setEventName] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [eventDate, setEventDate] = useState('')\n  const [eventTime, setEventTime] = useState('')\n  const [eventType, setEventType] = useState('')\n  const [eventPicture, setEventPicture] = useState([])\n  const [eventLocation, setEventLocation] = useState('')\n  const [eventOutdoor, setEventOutdoor] = useState(false)\n\n  const options = [\n    {label:'All', value:'all'},\n    {label: 'Music', value: 'music' },\n    {label: 'Food', value: 'food'},\n    {label: 'Sports', value: 'sports' },\n    {label: 'Arts', value: 'arts' },\n    {label: 'Building', value: 'building' },\n    {label: 'Meetups', value: 'meetups' },\n    {label: 'Social Volunteer', value: 'social volunteer' },\n  ]\n  \n  const handleSubmit = e => {\n\t\te.preventDefault()\n\t  const requestBody = { eventName, eventDescription, eventDate, eventTime, eventType, eventPicture, eventLocation, eventOutdoor }\n\t\taxios.post(`/api/events/create`, requestBody)\n    .then(response => {\n      console.log(response)\n    })\n\n\t\t\t.catch(err => console.log(err))\n      setEventName('')\n      setEventDescription('')\n      setEventDate('')\n      setEventTime('')\n      setEventType('')\n      setEventLocation('')\n      setEventPicture([])\n      setEventOutdoor(false)\n\n      props.refreshEvents()\n\t}\n\n  const handleFileUpload = e => {\n    // console.log(\"The file to be uploaded is: \", e.target.files[0]);\n    const uploadData = new FormData();\n    uploadData.append(\"eventPicture\", e.target.files[0]);\n    serviceEvent\n      .uploadImage(uploadData)\n      .then(response => {\n        setEventPicture([response.secure_url, ...eventPicture]);\n      })\n      .catch(err => console.log(\"Error while uploading the file: \", err));\n  };\n\n  const handleEventName = e => setEventName(e.target.value)\n  const handleEventDescription = e => setEventDescription(e.target.value)\n  const handleEventDate= e => setEventDate(e.target.value)\n  const handleEventTime = e => setEventTime(e.target.value)\n  const handleEventType = e => setEventType(e.target.value)\n  const handleEventLocation = e => setEventLocation(e.target.value)\n  const handleCheckBox = e => setEventOutdoor(e.target.checked)\n\n  return (\n    <>\n    <h2>Create a new Event</h2>\n    <form  className=\"popUp-form\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n      <div className=\"popUp-container\">\n        <label className=\"label-popUp\" htmlFor=\"Name\">Name</label>\n        <input className=\"inputfield\" type=\"text\" value={eventName} onChange={handleEventName}></input>\n        <label className=\"label-popUp\" htmlFor=\"Description\">Description</label>\n        <input className=\"inputfield\" type=\"text\" value={eventDescription} onChange={handleEventDescription}></input>\n        <label className=\"label-popUp\" htmlFor=\"Date\">Date</label>\n        <input className=\"inputfield date-input\" type=\"date\" value={eventDate} onChange={handleEventDate}></input>\n        <label className=\"label-popUp\" htmlFor=\"Time\">Time</label>\n        <input className=\"inputfield\" type=\"time\" value={eventTime} onChange={handleEventTime}></input>\n        <label className=\"label-popUp\" htmlFor=\"Location\">Location</label>\n        <input className=\"inputfield\" type=\"text\" value={eventLocation} onChange={handleEventLocation}></input>\n        <label className=\"label-popUp\">Event Type</label>\n        <label>\n            <select className=\"inputfield\" value={eventType} onChange={handleEventType}>\n                {options.map((option) => (\n                <option value={option.value}>{option.label}</option>\n                ))}\n            </select>\n        </label>\n        {/* <div>\n            <h2>Upload images</h2>\n            <input id=\"eventImage\" name=\"eventPicture\" type=\"file\" onChange={(e) => handleFileUpload(e)}/>\n        </div> */}\n        {/* <div>\n            <input id=\"eventImages\" name=\"eventPicture\" type=\"file\" onChange={(e) => handleFileUpload(e)} />\n        </div>\n        <div>\n            <input id=\"eventImages\" name=\"eventPicture\" type=\"file\" onChange={(e) => handleFileUpload(e)} />\n        </div>\n         <div>\n            <input id=\"eventImages\" name=\"eventPicture\" type=\"file\" onChange={(e) => handleFileUpload(e)} />\n        </div> */}\n        <label className=\"label-popUp\" htmlFor=\"Outdoor\">Outdoor</label>\n        <input type=\"checkBox\" value={eventOutdoor} onChange={handleCheckBox}/>\n      </div>        \n        <button className=\"popUp-btn\" type=\"submit\">+</button>\n    </form>\n    </>\n  )\n}","/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/api/serviceEvent.js",["253"],[],"import axios from \"axios\";\n\nconst serviceEvent = axios.create({\n  baseURL: \"https://collective-app-2.herokuapp.com/api/\"\n  // withCredentials: true // => you might need this option if using cookies and sessions\n});\n\nconst errorHandler = err => {\n  throw err;\n};\n\nconst uploadImage = (file) => {\n  return serviceEvent\n    .post(\"event/upload\", file)\n    .then(res => res.data)\n    .catch(errorHandler);\n};\n\nexport default {\n  serviceEvent,\n  uploadImage\n};",{"ruleId":"254","severity":1,"message":"255","line":4,"column":7,"nodeType":"256","messageId":"257","endLine":4,"endColumn":14},{"ruleId":"254","severity":1,"message":"258","line":18,"column":8,"nodeType":"256","messageId":"257","endLine":18,"endColumn":19},{"ruleId":"259","severity":1,"message":"260","line":21,"column":5,"nodeType":"261","endLine":21,"endColumn":7,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":27,"column":9,"nodeType":"265","endLine":27,"endColumn":23},{"ruleId":"263","severity":1,"message":"264","line":32,"column":9,"nodeType":"265","endLine":32,"endColumn":25},{"ruleId":"263","severity":1,"message":"264","line":37,"column":9,"nodeType":"265","endLine":37,"endColumn":23},{"ruleId":"259","severity":1,"message":"266","line":31,"column":37,"nodeType":"261","endLine":31,"endColumn":39,"suggestions":"267"},{"ruleId":"259","severity":1,"message":"268","line":17,"column":5,"nodeType":"261","endLine":17,"endColumn":7,"suggestions":"269"},{"ruleId":"259","severity":1,"message":"260","line":24,"column":4,"nodeType":"261","endLine":24,"endColumn":6,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":31,"column":79,"nodeType":"273","messageId":"274","endLine":31,"endColumn":81},{"ruleId":"259","severity":1,"message":"275","line":65,"column":41,"nodeType":"261","endLine":65,"endColumn":43,"suggestions":"276"},{"ruleId":"259","severity":1,"message":"277","line":25,"column":41,"nodeType":"261","endLine":25,"endColumn":43,"suggestions":"278"},{"ruleId":"271","severity":1,"message":"272","line":32,"column":58,"nodeType":"273","messageId":"274","endLine":32,"endColumn":60},{"ruleId":"259","severity":1,"message":"279","line":73,"column":39,"nodeType":"261","endLine":73,"endColumn":41,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":5,"column":1,"nodeType":"283","endLine":16,"endColumn":2},{"ruleId":"254","severity":1,"message":"255","line":6,"column":7,"nodeType":"256","messageId":"257","endLine":6,"endColumn":14},{"ruleId":"254","severity":1,"message":"284","line":12,"column":23,"nodeType":"256","messageId":"257","endLine":12,"endColumn":38},{"ruleId":"254","severity":1,"message":"255","line":6,"column":7,"nodeType":"256","messageId":"257","endLine":6,"endColumn":14},{"ruleId":"259","severity":1,"message":"285","line":27,"column":37,"nodeType":"261","endLine":27,"endColumn":39,"suggestions":"286"},{"ruleId":"254","severity":1,"message":"287","line":20,"column":12,"nodeType":"256","messageId":"257","endLine":20,"endColumn":29},{"ruleId":"254","severity":1,"message":"288","line":8,"column":23,"nodeType":"256","messageId":"257","endLine":8,"endColumn":34},{"ruleId":"259","severity":1,"message":"285","line":34,"column":37,"nodeType":"261","endLine":34,"endColumn":39,"suggestions":"289"},{"ruleId":"259","severity":1,"message":"266","line":29,"column":37,"nodeType":"261","endLine":29,"endColumn":39,"suggestions":"290"},{"ruleId":"281","severity":1,"message":"291","line":19,"column":1,"nodeType":"283","endLine":22,"endColumn":3},{"ruleId":"271","severity":1,"message":"292","line":55,"column":29,"nodeType":"273","messageId":"293","endLine":55,"endColumn":31},{"ruleId":"254","severity":1,"message":"294","line":50,"column":9,"nodeType":"256","messageId":"257","endLine":50,"endColumn":25},{"ruleId":"281","severity":1,"message":"291","line":19,"column":1,"nodeType":"283","endLine":22,"endColumn":3},"no-unused-vars","'API_URL' is assigned a value but never used.","Identifier","unusedVar","'removeToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'storedToken'. Either include them or remove the dependency array.","ArrayExpression",["295"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getAllEvents'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["297"],["298"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getProjectToEdit'. Either include it or remove the dependency array.",["299"],"React Hook useEffect has a missing dependency: 'getAllVolunteers'. Either include it or remove the dependency array.",["300"],"React Hook useEffect has a missing dependency: 'getEventToEdit'. Either include it or remove the dependency array.",["301"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'setErrorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllProjects'. Either include it or remove the dependency array.",["302"],"'projectAppliedFor' is assigned a value but never used.","'logOutAdmin' is assigned a value but never used.",["303"],["304"],"Assign object to a variable before exporting as module default","Array.prototype.map() expects a return value from arrow function.","expectedInside","'handleFileUpload' is assigned a value but never used.",{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"305","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"318","fix":"320"},{"desc":"307","fix":"321"},"Update the dependencies array to be: [id, storedToken]",{"range":"322","text":"323"},"Update the dependencies array to be: [getAllEvents]",{"range":"324","text":"325"},"Update the dependencies array to be: [id]",{"range":"326","text":"327"},{"range":"328","text":"323"},"Update the dependencies array to be: [getProjectToEdit]",{"range":"329","text":"330"},"Update the dependencies array to be: [getAllVolunteers]",{"range":"331","text":"332"},"Update the dependencies array to be: [getEventToEdit]",{"range":"333","text":"334"},"Update the dependencies array to be: [getAllProjects]",{"range":"335","text":"336"},{"range":"337","text":"336"},{"range":"338","text":"325"},[708,710],"[id, storedToken]",[1092,1094],"[getAllEvents]",[440,442],"[id]",[815,817],[2742,2744],"[getProjectToEdit]",[831,833],"[getAllVolunteers]",[2504,2506],"[getEventToEdit]",[838,840],"[getAllProjects]",[1163,1165],[876,878]]