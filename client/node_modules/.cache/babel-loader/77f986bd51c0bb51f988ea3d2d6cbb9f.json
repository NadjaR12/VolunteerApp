{"ast":null,"code":"var _jsxFileName = \"/home/lorelai/Schreibtisch/Ironhack/w8 Project3/Collective-App/client/src/pagesAdmin/EditEvent.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport service from '../api/service';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditProject(props) {\n  _s();\n\n  const [eventName, setEventName] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [eventTime, setEventTime] = useState('');\n  const [eventType, setEventType] = useState('');\n  const [eventPicture, setEventPicture] = useState([]);\n  const [eventLocation, setEventLocation] = useState('');\n  const [eventOutdoor, setEventOutdoor] = useState(false);\n  const options = [{\n    label: 'All',\n    value: 'all'\n  }, {\n    label: 'Music',\n    value: 'music'\n  }, {\n    label: 'Food',\n    value: 'food'\n  }, {\n    label: 'Sports',\n    value: 'sports'\n  }, {\n    label: 'Arts',\n    value: 'arts'\n  }, {\n    label: 'Building',\n    value: 'building'\n  }, {\n    label: 'Meetups',\n    value: 'meetups'\n  }, {\n    label: 'Social Volunteer',\n    value: 'social volunteer'\n  }];\n  const {\n    id\n  } = useParams();\n\n  const handleSubmit = e => {\n    console.log();\n    e.preventDefault();\n    const requestBody = {\n      eventName,\n      eventDescription,\n      eventDate,\n      eventTime,\n      eventType,\n      eventPicture,\n      eventLocation,\n      eventOutdoor\n    };\n    axios.put(`/api/event/${id}`, requestBody).then(() => {\n      props.refreshEvents();\n    }).catch(err => console.log(err));\n  };\n\n  const handleFileUpload = e => {\n    // console.log(\"The file to be uploaded is: \", e.target.files[0]);\n    const uploadData = new FormData();\n    uploadData.append(\"eventPicture\", e.target.files[0]);\n    service.uploadImage(uploadData).then(response => {\n      setEventPicture([...eventPicture, response.secure_url]);\n    }).catch(err => console.log(\"Error while uploading the file: \", err));\n  };\n\n  const storedToken = localStorage.getItem('authToken');\n\n  const getEventToEdit = () => {\n    axios.get(`/api/event/${id}`, {\n      headers: {\n        Authorization: `Bearer ${storedToken}`\n      }\n    }).then(response => {\n      const {\n        eventName,\n        eventDescription,\n        eventDate,\n        eventTime,\n        eventType,\n        eventPicture,\n        eventLocation,\n        eventOutdoor\n      } = response.data;\n      setEventName(eventName);\n      setEventDescription(eventDescription);\n      setEventDate(eventDate);\n      setEventTime(eventTime);\n      setEventType(eventType);\n      setEventPicture(eventPicture);\n      setEventLocation(eventLocation);\n      setEventOutdoor(eventOutdoor);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getEventToEdit();\n  }, []);\n\n  const handleCheckBox = e => setEventOutdoor(e.target.value);\n\n  const handleEventType = e => setEventType(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Edit \", /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: eventName\n      }, void 0, false), \" event\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventName\",\n        children: \"Event name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"eventName\",\n        name: \"eventName\",\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventName\",\n        children: \"Description \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"eventDescription\",\n        name: \"eventDescription\",\n        type: \"text\",\n        value: eventDescription,\n        onChange: e => setEventDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Event Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: eventType,\n            onChange: handleEventType,\n            children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventName\",\n        children: \"Date \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"eventDate\",\n        name: \"eventDate\",\n        type: \"date\",\n        value: eventDate,\n        onChange: e => setEventDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventName\",\n        children: \"Time \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"eventTime\",\n        name: \"eventTime\",\n        type: \"time\",\n        value: eventTime,\n        onChange: e => setEventTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventName\",\n        children: \"Location \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"eventLocation\",\n        name: \"eventLocation\",\n        type: \"text\",\n        value: eventLocation,\n        onChange: e => setEventLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Outdoor\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkBox\",\n          value: eventOutdoor,\n          name: \"outdoors\",\n          onChange: handleCheckBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"eventPicture\",\n          name: \"imageUpload\",\n          type: \"file\",\n          onChange: e => handleFileUpload(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update this project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditProject, \"rDO/rMk1twZxFOp5Cdou0CdVLZs=\", false, function () {\n  return [useParams];\n});\n\n_c = EditProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProject\");","map":{"version":3,"sources":["/home/lorelai/Schreibtisch/Ironhack/w8 Project3/Collective-App/client/src/pagesAdmin/EditEvent.js"],"names":["axios","React","useState","useEffect","useParams","service","EditProject","props","eventName","setEventName","eventDescription","setEventDescription","eventDate","setEventDate","eventTime","setEventTime","eventType","setEventType","eventPicture","setEventPicture","eventLocation","setEventLocation","eventOutdoor","setEventOutdoor","options","label","value","id","handleSubmit","e","console","log","preventDefault","requestBody","put","then","refreshEvents","catch","err","handleFileUpload","uploadData","FormData","append","target","files","uploadImage","response","secure_url","storedToken","localStorage","getItem","getEventToEdit","get","headers","Authorization","data","handleCheckBox","handleEventType","map","option"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'\nimport service from '../api/service'\n\nexport default function EditProject(props) {\n\n\tconst [eventName, setEventName] = useState('');\n\tconst [eventDescription, setEventDescription] = useState('');\n  \tconst [eventDate, setEventDate] = useState('')\n  \tconst [eventTime, setEventTime] = useState('')\n  \tconst [eventType, setEventType] = useState('')\n  \tconst [eventPicture, setEventPicture] = useState([])\n  \tconst [eventLocation, setEventLocation] = useState('')\n  \tconst [eventOutdoor, setEventOutdoor] = useState(false)\n\t\n\tconst options = [\n    \t{label:'All', value:'all'},\n        {label: 'Music', value: 'music' },\n        {label: 'Food', value: 'food'},\n        {label: 'Sports', value: 'sports' },\n        {label: 'Arts', value: 'arts' },\n        {label: 'Building', value: 'building' },\n        {label: 'Meetups', value: 'meetups' },\n        {label: 'Social Volunteer', value: 'social volunteer' },\n    ]\n  \n  \n\tconst { id } = useParams()\n\t\n\n\tconst handleSubmit = e => {\n\t\tconsole.log()\n\t\te.preventDefault()\n\t\tconst requestBody = { eventName, eventDescription, eventDate, eventTime, eventType, eventPicture, eventLocation, eventOutdoor }\n\t\taxios.put(`/api/event/${id}`, requestBody)\n\t\t\t.then(() => {\n\t\t\t\tprops.refreshEvents()\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\tconst handleFileUpload = e => {\n\t\t// console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\t\tconst uploadData = new FormData();\n\t\tuploadData.append(\"eventPicture\", e.target.files[0]);\n\t\tservice\n\t\t  .uploadImage(uploadData)\n\t\t  .then(response => {\n\t\t\tsetEventPicture([...eventPicture, response.secure_url]);\n\t\t  })\n\t\t  .catch(err => console.log(\"Error while uploading the file: \", err));\n\t  };\n\n\n\tconst storedToken = localStorage.getItem('authToken')\n\n\tconst getEventToEdit = () => {\n\t\taxios.get(`/api/event/${id}`, { headers: { Authorization: `Bearer ${storedToken}` } })\n\t\t.then(response =>{\n\t\t\tconst { eventName, eventDescription, eventDate, eventTime, eventType, eventPicture, eventLocation, eventOutdoor } = response.data\n\t\t\t\tsetEventName(eventName)\n\t\t\t\tsetEventDescription(eventDescription)\n        \t\tsetEventDate(eventDate)\n        \t\tsetEventTime(eventTime)\n        \t\tsetEventType(eventType)\n        \t\tsetEventPicture(eventPicture)\n       \t\t\tsetEventLocation(eventLocation)\n\t\t\t\tsetEventOutdoor(eventOutdoor)\n\t\t})\n\t\t.catch(err => console.log(err))\n\t}\n\tuseEffect(() => { getEventToEdit()}, [])\n\n\t\n    const handleCheckBox = e => setEventOutdoor(e.target.value)\n\tconst handleEventType = e => setEventType(e.target.value)\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Edit <>{eventName}</> event</h1>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<label htmlFor=\"eventName\">Event name </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventName\"\n\t\t\t\t\tname='eventName'\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={eventName}\n\t\t\t\t\tonChange={e => setEventName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"eventName\">Description </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventDescription\"\n\t\t\t\t\tname='eventDescription'\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={eventDescription}\n\t\t\t\t\tonChange={e => setEventDescription(e.target.value)}\n\t\t\t\t/>\n        <div>\n            Event Type\n        </div>\n        <div>\n        <label>\n            <select value={eventType} onChange={handleEventType}>\n                {options.map((option) => (\n                <option value={option.value}>{option.label}</option>\n                ))}\n            </select>\n        </label>\n        </div>\n        <label htmlFor=\"eventName\">Date </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventDate\"\n\t\t\t\t\tname='eventDate'\n\t\t\t\t\ttype=\"date\"\n\t\t\t\t\tvalue={eventDate}\n\t\t\t\t\tonChange={e => setEventDate(e.target.value)}\n\t\t\t\t/>\n        <label htmlFor=\"eventName\">Time </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventTime\"\n\t\t\t\t\tname='eventTime'\n\t\t\t\t\ttype=\"time\"\n\t\t\t\t\tvalue={eventTime}\n\t\t\t\t\tonChange={e => setEventTime(e.target.value)}\n\t\t\t\t/>\n        <label htmlFor=\"eventName\">Location </label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"eventLocation\"\n\t\t\t\t\tname='eventLocation'\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={eventLocation}\n\t\t\t\t\tonChange={e => setEventLocation(e.target.value)}\n\t\t\t\t/>\n\t\t<div>\n            Outdoor\n            <input type=\"checkBox\" value={eventOutdoor} name='outdoors' onChange={handleCheckBox}/>\n        </div>\n        <div>\n            <h2>Upload images</h2>\n            <input id=\"eventPicture\" name=\"imageUpload\" type=\"file\" onChange={(e) => handleFileUpload(e)}/>\n        </div>\n\t\t\t\t\n\t\t\t\t<button type=\"submit\">Update this project</button>\n\t\t\t</form>\n\t\t\t\n\t\t\t\n\t\t</>\n\n\t)\n}\n\n"]},"metadata":{},"sourceType":"module"}