{"ast":null,"code":"var _jsxFileName = \"/home/lorelai/Schreibtisch/Ironhack/w8 Project3/Collective-App/client/src/components/IsPrivate.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/auth\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IsPrivate(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isLoggedIn,\n    isLoading\n  } = useContext(AuthContext); // If the authentication is still loading \n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 25\n  }, this);\n\n  if (!isLoggedIn) {\n    // If the admin is not logged in \n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  } else {\n    // If the admin is logged in, allow to see the page \n    return children;\n  }\n}\n\n_s(IsPrivate, \"dtSZR+jElVUQM0w2A5X/Fn6XWp8=\");\n\n_c = IsPrivate;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsPrivate\");","map":{"version":3,"sources":["/home/lorelai/Schreibtisch/Ironhack/w8 Project3/Collective-App/client/src/components/IsPrivate.js"],"names":["useContext","AuthContext","Navigate","IsPrivate","children","isLoggedIn","isLoading"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,eAAe,SAASC,SAAT,OAAmC;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAEhD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BN,UAAU,CAACC,WAAD,CAA5C,CAFgD,CAIhD;;AACA,MAAIK,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEf,MAAI,CAACD,UAAL,EAAiB;AACjB;AACE,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHD,MAGO;AACP;AACE,WAAOD,QAAP;AACD;AACF;;GAduBD,S;;KAAAA,S","sourcesContent":["import { useContext } from \"react\";\nimport { AuthContext } from \"../context/auth\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function IsPrivate( { children } ) {\n  \n  const { isLoggedIn, isLoading } = useContext(AuthContext);\n\n  // If the authentication is still loading \n  if (isLoading) return <p>Loading ...</p>;\n\n  if (!isLoggedIn) {\n  // If the admin is not logged in \n    return <Navigate to=\"/login\" />;\n  } else {\n  // If the admin is logged in, allow to see the page \n    return children;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}