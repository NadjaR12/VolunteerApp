{"ast":null,"code":"import _slicedToArray from\"/home/lorelai/Schreibtisch/Ironhack/w8 Project3/Collective-App/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";var API_URL='https://collective-app-2.herokuapp.com';var AuthContext=/*#__PURE__*/React.createContext();function AuthProviderWrapper(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),admin=_useState2[0],setAdmin=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoggedIn=_useState4[0],setIsLoggedIn=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var storeToken=function storeToken(token){// store this token in local storage\nlocalStorage.setItem('authToken',token);};var removeToken=function removeToken(){// Upon logout, remove the token from the localStorage\nlocalStorage.removeItem(\"authToken\");};var logoutAdmin=function logoutAdmin(){// update the state\n//removeToken()\nsetIsLoggedIn(false);setAdmin(null);};var authenticateAdmin=function authenticateAdmin(){// check local storage\nvar storedToken=localStorage.getItem('authToken');if(storedToken){return axios.get(\"/api/auth/verify\",{headers:{Authorization:\"Bearer \".concat(storedToken)}}).then(function(response){var admin=response.data;setAdmin(admin);setIsLoggedIn(true);setIsLoading(false);}).catch(function(err){// the token is invalid\nsetIsLoggedIn(false);setAdmin(null);setIsLoading(false);});}else{// there is no token in local storage\nsetIsLoading(false);setIsLoggedIn(false);setAdmin(null);}};useEffect(function(){// check if we have an auth token stored\nauthenticateAdmin();authenticateAdmin();logoutAdmin();},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn:isLoggedIn,admin:admin,isLoading:isLoading,storeToken:storeToken,authenticateAdmin:authenticateAdmin,logoutAdmin:logoutAdmin},children:props.children});}export{AuthProviderWrapper,AuthContext};","map":{"version":3,"sources":["/home/lorelai/Schreibtisch/Ironhack/w8 Project3/Collective-App/client/src/context/auth.js"],"names":["React","useState","useEffect","axios","API_URL","AuthContext","createContext","AuthProviderWrapper","props","admin","setAdmin","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","storeToken","token","localStorage","setItem","removeToken","removeItem","logoutAdmin","authenticateAdmin","storedToken","getItem","get","headers","Authorization","then","response","data","catch","err","children"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAIA,GAAMC,CAAAA,OAAO,CAAC,wCAAd,CACA,GAAMC,CAAAA,WAAW,cAAGL,KAAK,CAACM,aAAN,EAApB,CAEA,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAEnC,cAA0BP,QAAQ,CAAC,IAAD,CAAlC,wCAAOQ,KAAP,eAAcC,QAAd,eACA,eAAoCT,QAAQ,CAAC,KAAD,CAA5C,yCAAOU,UAAP,eAAmBC,aAAnB,eACA,eAAkCX,QAAQ,CAAC,IAAD,CAA1C,yCAAOY,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC3B;AACAC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCF,KAAlC,EACA,CAHD,CAKA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACzB;AACAF,YAAY,CAACG,UAAb,CAAwB,WAAxB,EACA,CAHD,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACzB;AACA;AACAT,aAAa,CAAC,KAAD,CAAb,CACAF,QAAQ,CAAC,IAAD,CAAR,CACA,CALD,CASA,GAAMY,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC/B;AACA,GAAMC,CAAAA,WAAW,CAAGN,YAAY,CAACO,OAAb,CAAqB,WAArB,CAApB,CACA,GAAID,WAAJ,CAAiB,CAChB,MAAOpB,CAAAA,KAAK,CAACsB,GAAN,oBAA8B,CAAEC,OAAO,CAAE,CAAEC,aAAa,kBAAYJ,WAAZ,CAAf,CAAX,CAA9B,EACLK,IADK,CACA,SAAAC,QAAQ,CAAI,CACjB,GAAMpB,CAAAA,KAAK,CAAGoB,QAAQ,CAACC,IAAvB,CACApB,QAAQ,CAACD,KAAD,CAAR,CACAG,aAAa,CAAC,IAAD,CAAb,CACAE,YAAY,CAAC,KAAD,CAAZ,CACA,CANK,EAOLiB,KAPK,CAOC,SAAAC,GAAG,CAAI,CACb;AACApB,aAAa,CAAC,KAAD,CAAb,CACAF,QAAQ,CAAC,IAAD,CAAR,CACAI,YAAY,CAAC,KAAD,CAAZ,CACA,CAZK,CAAP,CAaA,CAdD,IAcO,CACN;AACAA,YAAY,CAAC,KAAD,CAAZ,CACAF,aAAa,CAAC,KAAD,CAAb,CACAF,QAAQ,CAAC,IAAD,CAAR,CACA,CACD,CAvBD,CAyBAR,SAAS,CAAC,UAAM,CACf;AACAoB,iBAAiB,GACjBA,iBAAiB,GACjBD,WAAW,GACX,CALQ,CAKN,EALM,CAAT,CAOA,mBACC,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEV,UAAU,CAAVA,UAAF,CAAcF,KAAK,CAALA,KAAd,CAAqBI,SAAS,CAATA,SAArB,CAAgCE,UAAU,CAAVA,UAAhC,CAA4CO,iBAAiB,CAAjBA,iBAA5C,CAA+DD,WAAW,CAAXA,WAA/D,CAA7B,UACEb,KAAK,CAACyB,QADR,EADD,CAKA,CAGD,OAAS1B,mBAAT,CAA8BF,WAA9B","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\n\nconst API_URL='https://collective-app-2.herokuapp.com';\nconst AuthContext = React.createContext()\n\nfunction AuthProviderWrapper(props) {\n\n\tconst [admin, setAdmin] = useState(null)\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst storeToken = token => {\n\t\t// store this token in local storage\n\t\tlocalStorage.setItem('authToken', token)\n\t}\n\n\tconst removeToken = () => {                    \n\t\t// Upon logout, remove the token from the localStorage\n\t\tlocalStorage.removeItem(\"authToken\");\n\t}\n\n\tconst logoutAdmin = () => {\n\t\t// update the state\n\t\t//removeToken()\n\t\tsetIsLoggedIn(false)\n\t\tsetAdmin(null)\n\t}\n\n\n\n\tconst authenticateAdmin = () => {\n\t\t// check local storage\n\t\tconst storedToken = localStorage.getItem('authToken')\n\t\tif (storedToken) {\n\t\t\treturn axios.get(`/api/auth/verify`, { headers: { Authorization: `Bearer ${storedToken}` } })\n\t\t\t\t.then(response => {\n\t\t\t\t\tconst admin = response.data\n\t\t\t\t\tsetAdmin(admin)\n\t\t\t\t\tsetIsLoggedIn(true)\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\t// the token is invalid\n\t\t\t\t\tsetIsLoggedIn(false)\n\t\t\t\t\tsetAdmin(null)\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t})\n\t\t} else {\n\t\t\t// there is no token in local storage\n\t\t\tsetIsLoading(false)\n\t\t\tsetIsLoggedIn(false)\n\t\t\tsetAdmin(null)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t// check if we have an auth token stored\n\t\tauthenticateAdmin()\n\t\tauthenticateAdmin()\n\t\tlogoutAdmin() \n\t}, [])\n\n\treturn (\n\t\t<AuthContext.Provider value={{ isLoggedIn, admin, isLoading, storeToken, authenticateAdmin, logoutAdmin }}>\n\t\t\t{props.children}\n\t\t</AuthContext.Provider>\n\t)\n}\n\n\nexport { AuthProviderWrapper, AuthContext }\n\n"]},"metadata":{},"sourceType":"module"}