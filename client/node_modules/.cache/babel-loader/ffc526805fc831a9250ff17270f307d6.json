{"ast":null,"code":"var _jsxFileName = \"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ProjectList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport PopUpEditProject from './PopUpEditProject';\nimport PopUpCreateProject from './PopUpCreateProject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProjectList(props) {\n  _s();\n\n  // State of Projects\n  const [projects, setProjects] = useState([]);\n  const [showCreateProject, setShowCreateProject] = useState(false);\n  const [projectToBeEdited, setProjectToBeEdited] = useState(null);\n  const storedToken = localStorage.getItem('authToken'); // Handle PopUp\n\n  const handleProjectToBeEdited = project => {\n    console.log('project', project);\n    setProjectToBeEdited(project);\n  }; // get all projects from the backend\n\n\n  const getAllProjects = () => {\n    // request 'api/projects'\n    // for every request to a project route we need to also send the token\n    axios.get('/api/projects', {\n      headers: {\n        Authorization: `Bearer ${storedToken}`\n      }\n    }).then(response => {\n      console.log('response.data', response.data); // set the state of projects\n\n      setProjects(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getAllProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dash-title-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-btn\",\n          onClick: () => setShowCreateProject(!showCreateProject),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), showCreateProject && /*#__PURE__*/_jsxDEV(PopUpCreateProject, {\n          refreshProjects: getAllProjects,\n          handleClose: () => setShowCreateProject(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: projects.map(project => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dash-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.projectName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dash-btn-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dash-btn\",\n              onClick: () => {\n                handleProjectToBeEdited(project);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), projectToBeEdited && /*#__PURE__*/_jsxDEV(PopUpEditProject, {\n              handleClose: () => {\n                setProjectToBeEdited(null);\n              },\n              thisproject: projectToBeEdited,\n              refreshProjects: getAllProjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dash-btn\",\n              onClick: () => {\n                axios.delete(`/api/projects/${project._id}`, {\n                  headers: {\n                    Authorization: `Bearer ${storedToken}`\n                  }\n                }).then(deletedProject => {\n                  console.log('deletedProject', deletedProject); // get all projects to show immediately list of projects without deleted item\n\n                  getAllProjects();\n                }).catch(err => console.log(err));\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"vol-link-dash\",\n            to: `/behind-the-scences/project/volunteer/${project._id}`,\n            children: \"See Applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, project._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProjectList, \"PGFKI7UxRI4lfdLCCc3WEpOaCNQ=\");\n\n_c = ProjectList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"sources":["/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ProjectList.js"],"names":["React","useEffect","useState","Link","axios","PopUpEditProject","PopUpCreateProject","ProjectList","props","projects","setProjects","showCreateProject","setShowCreateProject","projectToBeEdited","setProjectToBeEdited","storedToken","localStorage","getItem","handleProjectToBeEdited","project","console","log","getAllProjects","get","headers","Authorization","then","response","data","catch","err","map","projectName","delete","_id","deletedProject"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport PopUpEditProject from './PopUpEditProject'\nimport PopUpCreateProject from './PopUpCreateProject'\n\n\nexport default function ProjectList(props){\n// State of Projects\nconst [projects, setProjects] = useState([])\nconst [showCreateProject, setShowCreateProject] = useState(false)\nconst [projectToBeEdited, setProjectToBeEdited] = useState(null)\n\nconst storedToken = localStorage.getItem('authToken')\n// Handle PopUp\nconst handleProjectToBeEdited = project => {\n  console.log('project', project)\n  setProjectToBeEdited(project)}\n\n// get all projects from the backend\nconst getAllProjects = () => {\n  // request 'api/projects'\n  // for every request to a project route we need to also send the token\n  axios.get('/api/projects', { headers: { Authorization: `Bearer ${storedToken}` } })\n      .then(response => {\n          console.log('response.data',response.data)\n          // set the state of projects\n          setProjects(response.data)\n      })\n      .catch(err => {\n          console.log(err)\n      })\n}\nuseEffect(() => {getAllProjects()}, [])\n\n    return(\n      <>\n          <div className='dash-title-box'>\n            <h1>\n              Projects\n            </h1>\n            <div>\n              <button className='create-btn' onClick={() => setShowCreateProject(!showCreateProject)}>+</button>\n                {showCreateProject && (\n                  <PopUpCreateProject refreshProjects={getAllProjects} handleClose={() => setShowCreateProject(false)}/>\n                )}\n            </div>\n          </div>\n          <div>\n            {projects.map(project => {\n                return (\n                <div key={project._id} className='dash-list'>\n                  <h3>{project.projectName}</h3>\n                  <div className='dash-btn-container'>\n                    <button className='dash-btn' onClick={() => {handleProjectToBeEdited(project)}}>Edit</button>\n                      {projectToBeEdited && <PopUpEditProject\n                     handleClose={() => {setProjectToBeEdited(null)}} thisproject={projectToBeEdited} refreshProjects={getAllProjects}/>\n                      }\n                    <button className='dash-btn' onClick={()=>{\n                      axios.delete(`/api/projects/${project._id}`, { headers: { Authorization: `Bearer ${storedToken}` } })\n                      .then(deletedProject => {\n                        console.log('deletedProject', deletedProject)\n                        // get all projects to show immediately list of projects without deleted item\n                        getAllProjects();\n                        })\n                      .catch(err => console.log(err))\n                    }}>Delete</button>\n                  </div>\n                  <Link className='vol-link-dash' to={`/behind-the-scences/project/volunteer/${project._id}`}>See Applications</Link>\n                </div>\n                )}\n                )}\n                \n          </div>\n      </>\n    )  \n}"]},"metadata":{},"sourceType":"module"}