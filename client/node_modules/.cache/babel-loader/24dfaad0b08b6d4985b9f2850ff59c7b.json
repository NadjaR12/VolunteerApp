{"ast":null,"code":"var _jsxFileName = \"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ProjectListVisitor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProjectListVisitor() {\n  _s();\n\n  // State of Projects\n  const [projects, setProjects] = useState([]);\n  const storedToken = localStorage.getItem('authToken'); // get all projects from the backend\n\n  const getAllProjects = () => {\n    // request 'api/projects'\n    // for every request to a project route we need to also send the token\n    axios.get('/api/projects/', {\n      headers: {\n        Authorization: `Bearer ${storedToken}`\n      }\n    }).then(response => {\n      // log response from db\n      console.log('response.data', response.data); // set the state of projects\n\n      setProjects(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getAllProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: projects.map(project => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-project-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"project-title\",\n          children: project.projectName.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"project-text\",\n          children: project.projectLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"project-text\",\n          children: [project.projectStartDate, \" - \", project.projectEndDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"line-two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"\\\"project-link\\\"\",\n          to: `/projects/${project._id}`,\n          children: \"Details & Volunteer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"\\\"line-two\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(ProjectListVisitor, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n\n_c = ProjectListVisitor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectListVisitor\");","map":{"version":3,"sources":["/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/ProjectListVisitor.js"],"names":["React","useEffect","useState","Link","axios","ProjectListVisitor","projects","setProjects","storedToken","localStorage","getItem","getAllProjects","get","headers","Authorization","then","response","console","log","data","catch","err","map","project","projectName","toUpperCase","projectLocation","projectStartDate","projectEndDate","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC7C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMM,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB,CAJ6C,CAM7C;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3B;AACA;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAU,gBAAV,EAA4B;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASN,WAAY;AAAvC;AAAX,KAA5B,EACKO,IADL,CACUC,QAAQ,IAAI;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BF,QAAQ,CAACG,IAArC,EAFc,CAGd;;AACAZ,MAAAA,WAAW,CAACS,QAAQ,CAACG,IAAV,CAAX;AACH,KANL,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KATL;AAUD,GAbD;;AAcApB,EAAAA,SAAS,CAAC,MAAM;AAACU,IAAAA,cAAc;AAAG,GAAzB,EAA2B,EAA3B,CAAT;AAEI,sBACE;AAAA,cACGL,QAAQ,CAACgB,GAAT,CAAaC,OAAO,IAAI;AACrB,0BACI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBAA+BA,OAAO,CAACC,WAAR,CAAoBC,WAApB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oBAA8BF,OAAO,CAACG;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,qBAA8BH,OAAO,CAACI,gBAAtC,SAA2DJ,OAAO,CAACK,cAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAiC,UAAA,EAAE,EAAG,aAAYL,OAAO,CAACM,GAAI,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAI,UAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA,SAA+CN,OAAO,CAACM,GAAvD;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXA;AADH,mBADF;AAiBH;;GAxCuBxB,kB;;KAAAA,kB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n\nexport default function ProjectListVisitor() {\n// State of Projects\nconst [projects, setProjects] = useState([])\n\nconst storedToken = localStorage.getItem('authToken')\n\n// get all projects from the backend\nconst getAllProjects = () => {\n  // request 'api/projects'\n  // for every request to a project route we need to also send the token\n  axios.get('/api/projects/', { headers: { Authorization: `Bearer ${storedToken}` } })\n      .then(response => {\n          // log response from db\n          console.log('response.data',response.data)\n          // set the state of projects\n          setProjects(response.data)\n      })\n      .catch(err => {\n          console.log(err)\n      })\n}\nuseEffect(() => {getAllProjects()}, [])\n\n    return(\n      <>\n        {projects.map(project => {\n            return (\n                <div className=\"single-project-container\" key={project._id}>\n                    <h1 className=\"project-title\">{project.projectName.toUpperCase()}</h1>\n                    <h2 className=\"project-text\">{project.projectLocation}</h2>\n                    <h3 className=\"project-text\">{project.projectStartDate} - {project.projectEndDate}</h3>\n                    <hr className=\"line-two\"></hr>\n                    <Link className='\"project-link\"' to={`/projects/${project._id}`}>Details & Volunteer</Link>\n                    <hr className='\"line-two\"'></hr>\n                </div>\n            )\n        })\n        }\n      </>\n    )\n}"]},"metadata":{},"sourceType":"module"}