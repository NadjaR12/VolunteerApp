{"ast":null,"code":"var _jsxFileName = \"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/CreateProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios'; // import the service file since we need it to send the data to the server (for file upload)\n\nimport service from '../api/service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateProject(props) {\n  _s();\n\n  const [projectName, setProjectName] = useState('');\n  const [projectLocation, setProjectLocation] = useState('');\n  const [projectStartDate, setProjectStartDate] = useState('');\n  const [projectEndDate, setProjectEndDate] = useState('');\n  const [projectDescription, setProjectDescription] = useState('');\n  const [projectSkillsNeeded, setProjectSkillsNeeded] = useState('');\n  const [projectImageUrls, setProjectImageUrls] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // send the data from the state as a post request to the backend\n\n    const requestBody = {\n      projectName,\n      projectLocation,\n      projectStartDate,\n      projectEndDate,\n      projectDescription,\n      projectSkillsNeeded,\n      projectImageUrls\n    };\n    console.log('requestBody', requestBody);\n    axios.post('/api/projects/create', requestBody).then(response => {\n      console.log(response);\n    }).catch(err => console.log(err)); // reset the state\n\n    setProjectName('');\n    setProjectLocation('');\n    setProjectStartDate('');\n    setProjectEndDate('');\n    setProjectDescription('');\n    setProjectSkillsNeeded('');\n    setProjectImageUrls([]); // actualize the projects rendered\n\n    props.refreshProjects();\n  }; // ******** this method handles just the file upload ********\n\n\n  const handleFileUpload = e => {\n    const uploadData = new FormData();\n    const uploadedFiles = [...e.target.files];\n    console.log(uploadedFiles);\n    console.log(e.target.files[0]);\n    uploadedFiles.map(file => {\n      console.log(file);\n      uploadData.append(\"projectImageUrls\", file);\n      service.uploadImage(uploadData).then(response => {\n        // console.log('response.secure_url', response.secure_url)\n        setProjectImageUrls([...response.secure_url, ...projectImageUrls]);\n      }).catch(err => console.log(\"Error while uploading the file: \", err));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a new Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"popUp-form\",\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popUp-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-popUp\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputfield\",\n          id: \"projectName\",\n          name: \"projectName\",\n          type: \"text\",\n          value: projectName,\n          onChange: e => setProjectName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-popUp\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputfield\",\n          id: \"projectLocation\",\n          name: \"projectLocation\",\n          type: \"text\",\n          value: projectLocation,\n          onChange: e => setProjectLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-popUp\",\n          children: \"Project Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputfield date-input\",\n          id: \"projectStartDate\",\n          name: \"projectStartDate\",\n          type: \"date\",\n          value: projectStartDate,\n          onChange: e => setProjectStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-popUp\",\n          children: \"Project End\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputfield date-input\",\n          id: \"projectEndDate\",\n          name: \"projectEndDate\",\n          type: \"date\",\n          value: projectEndDate,\n          onChange: e => setProjectEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-popUp\",\n          children: \"Project Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputfield\",\n          id: \"projectDescription\",\n          name: \"projectDescription\",\n          type: \"text\",\n          value: projectDescription,\n          onChange: e => setProjectDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-popUp\",\n          children: \"Looking for Volunteers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputfield\",\n          id: \"projectSkillsNeeded\",\n          name: \"projectSkillsNeeded\",\n          type: \"text\",\n          value: projectSkillsNeeded,\n          onChange: e => setProjectSkillsNeeded(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputfield\",\n            id: \"projectImages\",\n            name: \"projectImageUrls\",\n            type: \"file\",\n            onChange: e => handleFileUpload(e),\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popUp-btn\",\n        type: \"submit\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateProject, \"hjrtmsyM2Rs8tu/w4NZCwP1NuEI=\");\n\n_c = CreateProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProject\");","map":{"version":3,"sources":["/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/CreateProject.js"],"names":["React","useState","axios","service","CreateProject","props","projectName","setProjectName","projectLocation","setProjectLocation","projectStartDate","setProjectStartDate","projectEndDate","setProjectEndDate","projectDescription","setProjectDescription","projectSkillsNeeded","setProjectSkillsNeeded","projectImageUrls","setProjectImageUrls","handleSubmit","e","preventDefault","requestBody","console","log","post","then","response","catch","err","refreshProjects","handleFileUpload","uploadData","FormData","uploadedFiles","target","files","map","file","append","uploadImage","secure_url","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n// import the service file since we need it to send the data to the server (for file upload)\nimport service from '../api/service'\n\nexport default function CreateProject(props) {\n\nconst [projectName, setProjectName] = useState('')\nconst [projectLocation, setProjectLocation] = useState('')\nconst [projectStartDate, setProjectStartDate] = useState('')\nconst [projectEndDate, setProjectEndDate] = useState('')\nconst [projectDescription, setProjectDescription] = useState('')\nconst [projectSkillsNeeded, setProjectSkillsNeeded] = useState('')\nconst [projectImageUrls, setProjectImageUrls] = useState([]);\n\nconst handleSubmit = e => {\n    e.preventDefault()\n    // send the data from the state as a post request to the backend\n    const requestBody = { \n        projectName,\n        projectLocation,\n        projectStartDate,\n        projectEndDate,\n        projectDescription,\n        projectSkillsNeeded,\n        projectImageUrls\n     }\n     console.log('requestBody', requestBody)\n\n\taxios.post('/api/projects/create', requestBody)\n        .then(response => {\n            console.log(response)\n        })\n        .catch(err => console.log(err))\n    // reset the state\n    setProjectName('')\n    setProjectLocation('')\n    setProjectStartDate('')\n    setProjectEndDate('')\n    setProjectDescription('')\n    setProjectSkillsNeeded('')\n    setProjectImageUrls([])\n    // actualize the projects rendered\n    props.refreshProjects()\n}\n\n // ******** this method handles just the file upload ********\n const handleFileUpload = e => {\n    const uploadData = new FormData();\n    const uploadedFiles = [...e.target.files]\n\n    console.log(uploadedFiles)\n    console.log(e.target.files[0])\n    \n    uploadedFiles.map(file  => {\n    console.log(file)\n    uploadData.append(\"projectImageUrls\", file);\n    service\n      .uploadImage(uploadData)\n      .then(response => {\n          // console.log('response.secure_url', response.secure_url)\n        setProjectImageUrls([...response.secure_url, ...projectImageUrls]);\n      })\n      .catch(err => console.log(\"Error while uploading the file: \", err));\n    })\n  };\n\n    return (\n    <>\n        <h2>Create a new Project</h2>\n    <form className=\"popUp-form\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n      <div className=\"popUp-container\">\n        <label className='label-popUp'>Name</label>\n        <input className=\"inputfield\" id=\"projectName\" name=\"projectName\"  type=\"text\" value={projectName} onChange={e => setProjectName(e.target.value)} />\n        <label className='label-popUp'>Location</label>\n        <input className=\"inputfield\" id=\"projectLocation\" name=\"projectLocation\"  type=\"text\" value={projectLocation} onChange={e => setProjectLocation(e.target.value)}></input>\n        <label className='label-popUp'>Project Start</label>\n        <input className=\"inputfield date-input\" id=\"projectStartDate\" name=\"projectStartDate\"  type=\"date\" value={projectStartDate} onChange={e => setProjectStartDate(e.target.value)}></input>\n        <label className='label-popUp'>Project End</label>\n        <input className=\"inputfield date-input\" id=\"projectEndDate\" name=\"projectEndDate\" type=\"date\" value={projectEndDate} onChange={e => setProjectEndDate(e.target.value)}></input>\n        <label className='label-popUp'>Project Description</label>\n        <input className=\"inputfield\" id=\"projectDescription\" name=\"projectDescription\" type=\"text\" value={projectDescription} onChange={e => setProjectDescription(e.target.value)}></input>\n        <label className='label-popUp'>Looking for Volunteers</label>\n        <input className=\"inputfield\" id=\"projectSkillsNeeded\" name=\"projectSkillsNeeded\" type=\"text\" value={projectSkillsNeeded} onChange={e => setProjectSkillsNeeded(e.target.value)}></input>\n      {/* file upload img cloudinary */}\n      <div>\n        <h2>Upload images</h2>\n        <input className=\"inputfield\" id=\"projectImages\" name=\"projectImageUrls\" type=\"file\" onChange={(e) => handleFileUpload(e)} multiple/>\n      </div>\n      </div>\n        <button className=\"popUp-btn\" type='submit'>+</button>\n    </form>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}