{"ast":null,"code":"var _jsxFileName = \"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport NavbarVisitor from '../components/NavbarVisitor';\nimport DateFilterEvent from '../components/DateFilterEvent';\nimport SearchBarEvent from '../components/SearchBarEvent';\nimport ToggleEvent from '../components/ToggleEvent';\nimport TypeFilterEvent from '../components/TypeFilterEvent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventsVisitors() {\n  _s();\n\n  const [events, setEvents] = useState(null);\n  const [query, setQuery] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [toggle, setToggle] = useState(false);\n  const [type, setType] = useState('');\n  const storedToken = localStorage.getItem('authToken');\n\n  const getAllEvents = () => {\n    axios.get('/api/events/', {\n      headers: {\n        Authorization: `Bearer ${storedToken}`\n      }\n    }).then(response => {\n      console.log('response.data', response.data);\n      setEvents(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getAllEvents();\n  }, []);\n\n  const handleClean = () => {\n    setEventDate('');\n  };\n\n  let filteredEvents;\n\n  if (events) {\n    filteredEvents = events.filter(event => {\n      return event.eventName.toLowerCase().includes(query);\n    });\n  }\n\n  if (events && eventDate) {\n    filteredEvents = filteredEvents.filter(event => {\n      return event.eventDate === eventDate;\n    });\n  }\n\n  if (toggle) {\n    filteredEvents = filteredEvents.filter(event => {\n      return event.eventOutdoor === true;\n    });\n  }\n\n  if (type !== '') {\n    filteredEvents = filteredEvents.filter(event => {\n      return event.eventType.toLowerCase() === type.toLowerCase();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: events === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavbarVisitor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading-project-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"UPCOMING EVENTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-page-container bg-overlay-event\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-box\",\n          children: [/*#__PURE__*/_jsxDEV(SearchBarEvent, {\n            setQueryProp: setQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TypeFilterEvent, {\n            type: type,\n            setTypeProp: setType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DateFilterEvent, {\n            eventDate: eventDate,\n            setEventDateProp: setEventDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"glow-on-events\",\n            onClick: handleClean,\n            children: \"Reset Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleEvent, {\n            setCheckProp: setToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-container\",\n          children: filteredEvents.map(event => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-project-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"event-title\",\n                children: event.eventName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"#\", event.eventType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"map-icon\",\n                  src: \"/images/placeholder.png\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 33\n                }, this), event.eventLocation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: event.eventDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: event.eventTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"hr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"event-link\",\n                to: `/events/${event._id}`,\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"hr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this)]\n            }, event._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(EventsVisitors, \"EuHac1jnqy2MSGpQFYGf18lYZvo=\");\n\n_c = EventsVisitors;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsVisitors\");","map":{"version":3,"sources":["/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesVisitor/Events.js"],"names":["React","useState","useEffect","Link","axios","NavbarVisitor","DateFilterEvent","SearchBarEvent","ToggleEvent","TypeFilterEvent","EventsVisitors","events","setEvents","query","setQuery","eventDate","setEventDate","toggle","setToggle","type","setType","storedToken","localStorage","getItem","getAllEvents","get","headers","Authorization","then","response","console","log","data","catch","err","handleClean","filteredEvents","filter","event","eventName","toLowerCase","includes","eventOutdoor","eventType","map","eventLocation","eventTime","_id"],"mappings":"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","sourcesContent":["import React,  { useState, useEffect }  from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport NavbarVisitor from '../components/NavbarVisitor'\nimport DateFilterEvent from '../components/DateFilterEvent'\nimport SearchBarEvent from '../components/SearchBarEvent'\nimport ToggleEvent from '../components/ToggleEvent'\nimport TypeFilterEvent from '../components/TypeFilterEvent'\n\n\nexport default function EventsVisitors() {\n\n    const [events, setEvents] = useState(null)\n    const [query, setQuery] = useState('')\n    const [eventDate ,setEventDate] = useState('')\n    const [toggle, setToggle] = useState(false)\n    const [type, setType] = useState('')\n\n    const storedToken = localStorage.getItem('authToken')\n\n    const getAllEvents = () => {\n        axios.get('/api/events/', {headers: {Authorization: `Bearer ${storedToken}`}})\n        .then(response => {\n            console.log('response.data', response.data)\n            setEvents(response.data)\n        })\n       .catch(err => {console.log(err) })\n   }\n   useEffect(()=> {getAllEvents()}, [])\n\n   const handleClean = () => {\n       setEventDate('')\n   }\n\n    let filteredEvents;\n\n    if(events){\n        filteredEvents = events.filter(event => {\n            return event.eventName.toLowerCase().includes(query)\n    })}\n    if(events && eventDate){\n        filteredEvents = filteredEvents.filter(event => {\n            return event.eventDate === eventDate\n         })\n    }\n    if(toggle){\n        filteredEvents = filteredEvents.filter(event => {\n            return event.eventOutdoor === true\n        })\n    }\n    if(type !== ''){\n        filteredEvents = filteredEvents.filter( event => {\n            return event.eventType.toLowerCase() === type.toLowerCase()\n       })\n    }\n   \n    return(\n    <>\n    {events === null ? <div>Loading ...</div> :\n        <>\n            <NavbarVisitor />\n            <div className=\"heading-project-container\">\n            <h1>UPCOMING EVENTS</h1>\n            </div>\n            <div className=\"event-page-container bg-overlay-event\">\n                {/* Filter Box */}\n                <div className=\"filter-box\">\n                        <SearchBarEvent setQueryProp={setQuery}/>\n                        <TypeFilterEvent type={type} setTypeProp={setType}/>\n                        <DateFilterEvent eventDate={eventDate} setEventDateProp={setEventDate}/>\n                        <button className=\"glow-on-events\" onClick={handleClean}>Reset Date</button> \n                        <ToggleEvent setCheckProp={setToggle}/>\n                </div>\n                {/* Event List */}\n                <div className=\"event-container\">\n                {filteredEvents.map(event => {\n                    return(\n                        <div key={event._id} className=\"single-project-container\">\n                            <h1 className=\"event-title\">{event.eventName}</h1>\n                            <p>#{event.eventType}</p>\n                            <h4><img className=\"map-icon\" src=\"/images/placeholder.png\" alt=\"\"/>{event.eventLocation}</h4>\n                            <div>{event.eventDate}</div>\n                            <p>{event.eventTime}</p>\n                            <hr className=\"hr\"></hr>  \n                            <Link className=\"event-link\" to={`/events/${event._id}`}>Details</Link>\n                            <hr className=\"hr\"></hr>\n                        </div>\n                    )\n                    })} \n                </div>\n            </div>\n        </>\n    }\n    </>\n    )\n}"]},"metadata":{},"sourceType":"module"}