{"ast":null,"code":"var _jsxFileName = \"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/TypeFilterEvent.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TypeFilterEvent(props) {\n  const options = [{\n    label: 'See All',\n    value: ''\n  }, {\n    label: 'Music',\n    value: 'music'\n  }, {\n    label: 'Food',\n    value: 'food'\n  }, {\n    label: 'Sports',\n    value: 'sports'\n  }, {\n    label: 'Arts',\n    value: 'arts'\n  }, {\n    label: 'Building',\n    value: 'building'\n  }, {\n    label: 'Meetups',\n    value: 'meetups'\n  }, {\n    label: 'Social Volunteer',\n    value: 'social volunteer'\n  }];\n  console.log('this are the props', props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Event Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"event-filter-input\",\n          value: props.type,\n          onChange: event => props.setTypeProp(event.target.value),\n          children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = TypeFilterEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeFilterEvent\");","map":{"version":3,"sources":["/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/components/TypeFilterEvent.js"],"names":["TypeFilterEvent","props","options","label","value","console","log","type","event","setTypeProp","target","map","option"],"mappings":";;;AAAA,eAAe,SAASA,eAAT,CAAyBC,KAAzB,EAA+B;AAG1C,QAAMC,OAAO,GAAG,CACZ;AAACC,IAAAA,KAAK,EAAC,SAAP;AAAkBC,IAAAA,KAAK,EAAC;AAAxB,GADY,EAEZ;AAACD,IAAAA,KAAK,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAFY,EAGZ;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHY,EAIZ;AAACD,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAJY,EAKZ;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALY,EAMZ;AAACD,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GANY,EAOZ;AAACD,IAAAA,KAAK,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAPY,EAQZ;AAACD,IAAAA,KAAK,EAAE,kBAAR;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GARY,CAAhB;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCL,KAAlC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACI;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,KAAK,EAAEA,KAAK,CAACM,IAApD;AAA0D,UAAA,QAAQ,EAAGC,KAAK,IAAIP,KAAK,CAACQ,WAAN,CAAkBD,KAAK,CAACE,MAAN,CAAaN,KAA/B,CAA9E;AAAA,oBACKF,OAAO,CAACS,GAAR,CAAaC,MAAD,iBACb;AAAQ,YAAA,KAAK,EAAEA,MAAM,CAACR,KAAtB;AAAA,sBAA8BQ,MAAM,CAACT;AAArC;AAAA;AAAA;AAAA;AAAA,kBADC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAgBH;KAhCuBH,e","sourcesContent":["export default function TypeFilterEvent(props){\n\n    \n    const options = [\n        {label:'See All', value:''},\n        {label: 'Music', value: 'music' },\n        {label: 'Food', value: 'food'},\n        {label: 'Sports', value: 'sports' },\n        {label: 'Arts', value: 'arts' },\n        {label: 'Building', value: 'building' },\n        {label: 'Meetups', value: 'meetups' },\n        {label: 'Social Volunteer', value: 'social volunteer' },\n    ]\n\n    console.log('this are the props', props)\n\n    return(\n        <>\n            <div>\n                Event Type\n            </div>\n            <div>\n                <label>\n                    <select className=\"event-filter-input\" value={props.type} onChange={(event => props.setTypeProp(event.target.value))}>\n                        {options.map((option) => (\n                        <option value={option.value}>{option.label}</option>\n                        ))}\n                    </select>\n                </label>\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}