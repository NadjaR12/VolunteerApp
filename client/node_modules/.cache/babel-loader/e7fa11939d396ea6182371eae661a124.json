{"ast":null,"code":"var _jsxFileName = \"/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/EditProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport service from '../api/service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditProject(props) {\n  _s();\n\n  // States\n  const [projectName, setProjectName] = useState('');\n  const [projectLocation, setProjectLocation] = useState('');\n  const [projectStartDate, setProjectStartDate] = useState('');\n  const [projectEndDate, setProjectEndDate] = useState('');\n  const [projectDescription, setProjectDescription] = useState('');\n  const [projectSkillsNeeded, setProjectSkillsNeeded] = useState('');\n  const [projectImageUrl, setProjectImageUrl] = useState([]); // where to change the data gained from edit\n\n  const handleEdit = e => {\n    e.preventDefault();\n    const requestBody = {\n      projectName,\n      projectLocation,\n      projectStartDate,\n      projectEndDate,\n      projectDescription,\n      projectSkillsNeeded,\n      projectImageUrl\n    };\n    axios.put(`/api/projects/${props.specificproject._id}`, requestBody).then(() => {\n      // actualize the projects rendered\n      props.refreshProjects();\n    }).catch(err => console.log(err));\n  }; // ******** this method handles just the file upload ********\n\n\n  const handleFileUpload = e => {\n    // console.log(\"The file to be uploaded is: \", e.target.files[0]);\n    const uploadData = new FormData();\n    uploadData.append(\"projectImageUrl\", e.target.files[0]);\n    service.uploadImage(uploadData).then(response => {\n      setProjectImageUrl([...projectImageUrl, response.secure_url]);\n    }).catch(err => console.log(\"Error while uploading the file: \", err));\n  };\n\n  const storedToken = localStorage.getItem('authToken'); // get specific project from backend to edit it\n\n  const getProjectToEdit = () => {\n    axios.get(`/api/projects/${props.specificproject._id}`, {\n      headers: {\n        Authorization: `Bearer ${storedToken}`\n      }\n    }).then(response => {\n      console.log('axiosgetproject', response.data);\n      const {\n        projectName\n      } = response.data;\n      const {\n        projectLocation\n      } = response.data;\n      const {\n        projectStartDate\n      } = response.data;\n      const {\n        projectEndDate\n      } = response.data;\n      const {\n        projectDescription\n      } = response.data;\n      const {\n        projectSkillsNeeded\n      } = response.data;\n      const {\n        projectImageUrl\n      } = response.data; // console.log('response.data.edit', response.data)\n\n      setProjectName(projectName);\n      setProjectLocation(projectLocation);\n      setProjectStartDate(projectStartDate);\n      setProjectEndDate(projectEndDate);\n      setProjectDescription(projectDescription);\n      setProjectSkillsNeeded(projectSkillsNeeded);\n      setProjectImageUrl(projectImageUrl);\n    }).catch(err => console.log(err));\n  }; // use the Project that we got from API\n\n\n  useEffect(() => {\n    getProjectToEdit();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"EditProject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEdit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Projectname: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"projectName\",\n        type: \"text\",\n        value: projectName,\n        onChange: e => setProjectName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Location: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"projectLocation\",\n        type: \"text\",\n        value: projectLocation,\n        onChange: e => setProjectLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"projectStartDate\",\n        type: \"date\",\n        value: projectStartDate,\n        onChange: e => setProjectStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"projectEndDate\",\n        type: \"date\",\n        value: projectEndDate,\n        onChange: e => setProjectEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"projectDescription\",\n        type: \"text\",\n        value: projectDescription,\n        onChange: e => setProjectDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Looking For: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"projectSkillsNeeded\",\n        type: \"text\",\n        value: projectSkillsNeeded,\n        onChange: e => setProjectSkillsNeeded(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"projectImages\",\n          name: \"imageUpload\",\n          type: \"file\",\n          onChange: e => handleFileUpload(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditProject, \"niquFL2fQ3wuyqOGOL/AoMRZV+s=\");\n\n_c = EditProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProject\");","map":{"version":3,"sources":["/home/lorelai/Schreibtisch/WebDev/Collective-App/client/src/pagesAdmin/EditProject.js"],"names":["React","useState","useEffect","axios","service","EditProject","props","projectName","setProjectName","projectLocation","setProjectLocation","projectStartDate","setProjectStartDate","projectEndDate","setProjectEndDate","projectDescription","setProjectDescription","projectSkillsNeeded","setProjectSkillsNeeded","projectImageUrl","setProjectImageUrl","handleEdit","e","preventDefault","requestBody","put","specificproject","_id","then","refreshProjects","catch","err","console","log","handleFileUpload","uploadData","FormData","append","target","files","uploadImage","response","secure_url","storedToken","localStorage","getItem","getProjectToEdit","get","headers","Authorization","data","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport service from '../api/service'\n\nexport default function EditProject(props) {\n  // States\n  const [projectName, setProjectName] = useState('')\n  const [projectLocation, setProjectLocation] = useState('')\n  const [projectStartDate, setProjectStartDate] = useState('')\n  const [projectEndDate, setProjectEndDate] = useState('')\n  const [projectDescription, setProjectDescription] = useState('')\n  const [projectSkillsNeeded, setProjectSkillsNeeded] = useState('')\n  const [projectImageUrl, setProjectImageUrl] = useState([]);\n\n  // where to change the data gained from edit\n  const handleEdit = e => {\n    e.preventDefault()\n\t\tconst requestBody = { projectName, projectLocation, projectStartDate, projectEndDate, projectDescription, projectSkillsNeeded, projectImageUrl }\n\t\taxios.put(`/api/projects/${props.specificproject._id}`, requestBody)\n\t\t\t.then(() => {\n        // actualize the projects rendered\n        props.refreshProjects()\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n  // ******** this method handles just the file upload ********\n const handleFileUpload = e => {\n  // console.log(\"The file to be uploaded is: \", e.target.files[0]);\n  const uploadData = new FormData();\n  uploadData.append(\"projectImageUrl\", e.target.files[0]);\n  service\n    .uploadImage(uploadData)\n    .then(response => {\n      setProjectImageUrl([...projectImageUrl, response.secure_url]);\n    })\n    .catch(err => console.log(\"Error while uploading the file: \", err));\n};\n  \n  const storedToken = localStorage.getItem('authToken')\n\n  // get specific project from backend to edit it\n  const getProjectToEdit = () => {\n\t\taxios.get(`/api/projects/${props.specificproject._id}`, { headers: { Authorization: `Bearer ${storedToken}` } })\n    .then(response => {\n      console.log('axiosgetproject', response.data);\t\n        const { projectName } = response.data\n        const { projectLocation } = response.data\n        const { projectStartDate } = response.data\n        const { projectEndDate } = response.data\n        const { projectDescription } = response.data\n        const { projectSkillsNeeded } = response.data\n        const { projectImageUrl } = response.data\n        // console.log('response.data.edit', response.data)\n          setProjectName(projectName)\n          setProjectLocation(projectLocation)\n          setProjectStartDate(projectStartDate)\n          setProjectEndDate(projectEndDate)\n          setProjectDescription(projectDescription)\n          setProjectSkillsNeeded(projectSkillsNeeded)\n          setProjectImageUrl(projectImageUrl)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n  }\n  // use the Project that we got from API\n  useEffect(() => {getProjectToEdit()}, [])\n\n  return (\n    <>\n       <div>EditProject</div>\n       <form onSubmit={handleEdit}> \n        <label>Projectname: </label>\n        <input id=\"projectName\" type=\"text\" value={projectName} onChange={e => setProjectName(e.target.value)}/>\n        <label>Location: </label>\n        <input id=\"projectLocation\" type=\"text\" value={projectLocation} onChange={e => setProjectLocation(e.target.value)}/>\n        <label>Start Date: </label>\n        <input id=\"projectStartDate\" type=\"date\" value={projectStartDate} onChange={e => setProjectStartDate(e.target.value)}/>\n        <label>End Date: </label>\n        <input id=\"projectEndDate\" type=\"date\" value={projectEndDate} onChange={e => setProjectEndDate(e.target.value)}/>\n        <label>Description: </label>\n        <input id=\"projectDescription\" type=\"text\" value={projectDescription} onChange={e => setProjectDescription(e.target.value)}/>\n        <label>Looking For: </label>\n        <input id=\"projectSkillsNeeded\" type=\"text\" value={projectSkillsNeeded} onChange={e => setProjectSkillsNeeded(e.target.value)}/>\n        {/* file upload img cloudinary */}\n        <div>\n            <h2>Upload images</h2>\n            <input id=\"projectImages\" name=\"imageUpload\" type=\"file\" onChange={(e) => handleFileUpload(e)}/>\n        </div>\n        <button type='submit'>Save Changes</button>\n       </form>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}